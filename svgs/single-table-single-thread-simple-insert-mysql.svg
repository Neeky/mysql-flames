<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >single-table-single-thread-simple-insert-mysql</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>blk_mq_dispatch_rq_list (2 samples, 3.70%)</title><rect x="315.9" y="453" width="43.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="318.93" y="463.5" >blk_..</text>
</g>
<g >
<title>ext4_writepages (2 samples, 3.70%)</title><rect x="315.9" y="613" width="43.7" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="318.93" y="623.5" >ext4..</text>
</g>
<g >
<title>innobase_commit(handlerton*, THD*, bool) (1 samples, 1.85%)</title><rect x="796.7" y="629" width="21.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="799.67" y="639.5" >i..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 5.56%)</title><rect x="315.9" y="725" width="65.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="318.93" y="735.5" >entry_S..</text>
</g>
<g >
<title>sock_sendmsg (5 samples, 9.26%)</title><rect x="534.4" y="405" width="109.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="537.44" y="415.5" >sock_sendmsg</text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 5.56%)</title><rect x="556.3" y="69" width="65.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="559.30" y="79.5" >__wake_..</text>
</g>
<g >
<title>page_cur_insert_rec_low(unsigned char*, dict_index_t*, unsigned char const*, unsigned long*, mtr_t*) (1 samples, 1.85%)</title><rect x="753.0" y="565" width="21.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="755.96" y="575.5" >p..</text>
</g>
<g >
<title>ha_commit_trans(THD*, bool, bool) (13 samples, 24.07%)</title><rect x="796.7" y="709" width="284.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="799.67" y="719.5" >ha_commit_trans(THD*, bool, bool)</text>
</g>
<g >
<title>IO_CACHE_binlog_cache_storage::truncate(unsigned long long) (1 samples, 1.85%)</title><rect x="840.4" y="581" width="21.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="843.37" y="591.5" >I..</text>
</g>
<g >
<title>handler::ha_write_row(unsigned char*) (4 samples, 7.41%)</title><rect x="687.4" y="677" width="87.4" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="690.41" y="687.5" >handler::h..</text>
</g>
<g >
<title>file_write_and_wait_range (2 samples, 3.70%)</title><rect x="315.9" y="661" width="43.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="318.93" y="671.5" >file..</text>
</g>
<g >
<title>binlog_cache_data::reset() (1 samples, 1.85%)</title><rect x="840.4" y="613" width="21.8" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="843.37" y="623.5" >b..</text>
</g>
<g >
<title>dispatch_command(THD*, COM_DATA const*, enum_server_command) (31 samples, 57.41%)</title><rect x="512.6" y="773" width="677.4" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="515.59" y="783.5" >dispatch_command(THD*, COM_DATA const*, enum_server_command)</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 3.70%)</title><rect x="141.1" y="677" width="43.7" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="144.11" y="687.5" >fini..</text>
</g>
<g >
<title>syscall_exit_work (1 samples, 1.85%)</title><rect x="359.6" y="677" width="21.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="362.63" y="687.5" >s..</text>
</g>
<g >
<title>__condvar_dec_grefs (1 samples, 1.85%)</title><rect x="31.9" y="821" width="21.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="34.85" y="831.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 1.85%)</title><rect x="206.7" y="709" width="21.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="209.67" y="719.5" >_..</text>
</g>
<g >
<title>reinit_io_cache(IO_CACHE*, cache_type, unsigned long long, bool, bool) (1 samples, 1.85%)</title><rect x="840.4" y="565" width="21.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="843.37" y="575.5" >r..</text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 1.85%)</title><rect x="447.0" y="709" width="21.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="450.04" y="719.5" >k..</text>
</g>
<g >
<title>net_read_packet(NET*, unsigned long*) (1 samples, 1.85%)</title><rect x="490.7" y="725" width="21.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="493.74" y="735.5" >n..</text>
</g>
<g >
<title>mysql_execute_command(THD*, bool) (21 samples, 38.89%)</title><rect x="665.6" y="741" width="458.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="668.56" y="751.5" >mysql_execute_command(THD*, bool)</text>
</g>
<g >
<title>vfs_write (5 samples, 9.26%)</title><rect x="534.4" y="453" width="109.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="537.44" y="463.5" >vfs_write</text>
</g>
<g >
<title>MYSQL_BIN_LOG::process_flush_stage_queue(unsigned long long*, bool*, THD**) (2 samples, 3.70%)</title><rect x="818.5" y="661" width="43.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="821.52" y="671.5" >MYSQ..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="490.7" y="485" width="21.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="493.74" y="495.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="447.0" y="773" width="21.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="450.04" y="783.5" >d..</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 1.85%)</title><rect x="534.4" y="117" width="21.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="537.44" y="127.5" >_..</text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 5.56%)</title><rect x="556.3" y="117" width="65.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="559.30" y="127.5" >tcp_v4_..</text>
</g>
<g >
<title>virtio_queue_rq (3 samples, 5.56%)</title><rect x="862.2" y="325" width="65.6" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="865.22" y="335.5" >virtio_..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 9.26%)</title><rect x="141.1" y="805" width="109.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="144.11" y="815.5" >do_syscall_64</text>
</g>
<g >
<title>binary_log::transaction::compression::Zstd_comp::compress(unsigned char const*, unsigned long) (2 samples, 3.70%)</title><rect x="1037.0" y="613" width="43.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1040.04" y="623.5" >bina..</text>
</g>
<g >
<title>schedule (1 samples, 1.85%)</title><rect x="184.8" y="709" width="21.9" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="187.81" y="719.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 5.56%)</title><rect x="315.9" y="709" width="65.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="318.93" y="719.5" >do_sysc..</text>
</g>
<g >
<title>Protocol_classic::read_packet() (1 samples, 1.85%)</title><rect x="490.7" y="757" width="21.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="493.74" y="767.5" >P..</text>
</g>
<g >
<title>ZSTD_CCtx_init_compressStream2 (2 samples, 3.70%)</title><rect x="1037.0" y="581" width="43.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1040.04" y="591.5" >ZSTD..</text>
</g>
<g >
<title>sock_def_readable (3 samples, 5.56%)</title><rect x="556.3" y="85" width="65.6" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="559.30" y="95.5" >sock_de..</text>
</g>
<g >
<title>blk_mq_flush_plug_list (2 samples, 3.70%)</title><rect x="315.9" y="565" width="43.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="318.93" y="575.5" >blk_..</text>
</g>
<g >
<title>__jbd2_log_start_commit (1 samples, 1.85%)</title><rect x="927.8" y="533" width="21.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="930.78" y="543.5" >_..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 1.85%)</title><rect x="53.7" y="725" width="21.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="56.70" y="735.5" >t..</text>
</g>
<g >
<title>Buf_fetch&lt;Buf_fetch_normal&gt;::single_page() (1 samples, 1.85%)</title><rect x="796.7" y="533" width="21.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="799.67" y="543.5" >B..</text>
</g>
<g >
<title>__x64_sys_fsync (2 samples, 3.70%)</title><rect x="315.9" y="693" width="43.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="318.93" y="703.5" >__x6..</text>
</g>
<g >
<title>read (1 samples, 1.85%)</title><rect x="490.7" y="517" width="21.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="493.74" y="527.5" >r..</text>
</g>
<g >
<title>vp_notify (2 samples, 3.70%)</title><rect x="315.9" y="405" width="43.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="318.93" y="415.5" >vp_n..</text>
</g>
<g >
<title>syscall_exit_work (1 samples, 1.85%)</title><rect x="75.6" y="773" width="21.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="78.56" y="783.5" >s..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 3.70%)</title><rect x="1037.0" y="533" width="43.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1040.04" y="543.5" >__me..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 3.70%)</title><rect x="53.7" y="805" width="43.7" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="56.70" y="815.5" >do_s..</text>
</g>
<g >
<title>Sql_cmd_dml::execute(THD*) (5 samples, 9.26%)</title><rect x="665.6" y="725" width="109.2" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="668.56" y="735.5" >Sql_cmd_dml::..</text>
</g>
<g >
<title>__GI___pwrite (1 samples, 1.85%)</title><rect x="425.2" y="709" width="21.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="428.19" y="719.5" >_..</text>
</g>
<g >
<title>PT_insert_values_list::contextualize(Parse_context*) (2 samples, 3.70%)</title><rect x="1124.4" y="677" width="43.7" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="1127.44" y="687.5" >PT_i..</text>
</g>
<g >
<title>start_thread (33 samples, 61.11%)</title><rect x="468.9" y="837" width="721.1" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="471.89" y="847.5" >start_thread</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 9.26%)</title><rect x="534.4" y="485" width="109.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="537.44" y="495.5" >do_syscall_64</text>
</g>
<g >
<title>blk_flush_plug (3 samples, 5.56%)</title><rect x="862.2" y="469" width="65.6" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="865.22" y="479.5" >blk_flu..</text>
</g>
<g >
<title>virtqueue_notify (3 samples, 5.56%)</title><rect x="862.2" y="309" width="65.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="865.22" y="319.5" >virtque..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 3.70%)</title><rect x="141.1" y="693" width="43.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="144.11" y="703.5" >fini..</text>
</g>
<g >
<title>MYSQLparse(THD*, Parse_tree_root**) (1 samples, 1.85%)</title><rect x="1168.1" y="709" width="21.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1171.15" y="719.5" >M..</text>
</g>
<g >
<title>syscall (1 samples, 1.85%)</title><rect x="447.0" y="805" width="21.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="450.04" y="815.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 7.41%)</title><rect x="862.2" y="613" width="87.4" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="865.22" y="623.5" >entry_SYSC..</text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (3 samples, 5.56%)</title><rect x="862.2" y="357" width="65.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="865.22" y="367.5" >__blk_m..</text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 1.85%)</title><rect x="490.7" y="357" width="21.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="493.74" y="367.5" >s..</text>
</g>
<g >
<title>BIO_read (1 samples, 1.85%)</title><rect x="490.7" y="565" width="21.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="493.74" y="575.5" >B..</text>
</g>
<g >
<title>tcp_sendmsg (5 samples, 9.26%)</title><rect x="534.4" y="389" width="109.3" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="537.44" y="399.5" >tcp_sendmsg</text>
</g>
<g >
<title>all (54 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>lex_start(THD*) (1 samples, 1.85%)</title><rect x="643.7" y="741" width="21.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="646.70" y="751.5" >l..</text>
</g>
<g >
<title>my_net_read(NET*) (1 samples, 1.85%)</title><rect x="490.7" y="741" width="21.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="493.74" y="751.5" >m..</text>
</g>
<g >
<title>BIO_write (5 samples, 9.26%)</title><rect x="534.4" y="565" width="109.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="537.44" y="575.5" >BIO_write</text>
</g>
<g >
<title>srv_purge_coordinator_thread() (1 samples, 1.85%)</title><rect x="250.4" y="805" width="21.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="253.37" y="815.5" >s..</text>
</g>
<g >
<title>LEX::make_sql_cmd(Parse_tree_root*) (2 samples, 3.70%)</title><rect x="1124.4" y="709" width="43.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1127.44" y="719.5" >LEX:..</text>
</g>
<g >
<title>Protocol_classic::get_command(COM_DATA*, enum_server_command*) (1 samples, 1.85%)</title><rect x="490.7" y="773" width="21.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="493.74" y="783.5" >P..</text>
</g>
<g >
<title>file_write_and_wait_range (3 samples, 5.56%)</title><rect x="862.2" y="549" width="65.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="865.22" y="559.5" >file_wr..</text>
</g>
<g >
<title>Buf_fetch&lt;Buf_fetch_normal&gt;::lookup() (1 samples, 1.85%)</title><rect x="796.7" y="501" width="21.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="799.67" y="511.5" >B..</text>
</g>
<g >
<title>ZSTD_compressBlock_doubleFast (1 samples, 1.85%)</title><rect x="971.5" y="533" width="21.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="974.48" y="543.5" >Z..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 1.85%)</title><rect x="359.6" y="693" width="21.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="362.63" y="703.5" >s..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::sync_binlog_file(bool) (4 samples, 7.41%)</title><rect x="862.2" y="661" width="87.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="865.22" y="671.5" >MYSQL_BIN_..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 3.70%)</title><rect x="315.9" y="645" width="43.7" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="318.93" y="655.5" >__fi..</text>
</g>
<g >
<title>process_backlog (5 samples, 9.26%)</title><rect x="534.4" y="197" width="109.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="537.44" y="207.5" >process_backlog</text>
</g>
<g >
<title>net_read_raw_loop(NET*, unsigned long) (1 samples, 1.85%)</title><rect x="490.7" y="709" width="21.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="493.74" y="719.5" >n..</text>
</g>
<g >
<title>__x64_sys_sched_yield (1 samples, 1.85%)</title><rect x="250.4" y="741" width="21.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="253.37" y="751.5" >_..</text>
</g>
<g >
<title>iowrite16 (2 samples, 3.70%)</title><rect x="315.9" y="389" width="43.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="318.93" y="399.5" >iowr..</text>
</g>
<g >
<title>ksys_write (5 samples, 9.26%)</title><rect x="534.4" y="469" width="109.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="537.44" y="479.5" >ksys_write</text>
</g>
<g >
<title>log_write_notifier(log_t*) (1 samples, 1.85%)</title><rect x="381.5" y="805" width="21.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="384.48" y="815.5" >l..</text>
</g>
<g >
<title>fil_redo_io(IORequest const&amp;, page_id_t const&amp;, page_size_t const&amp;, unsigned long, unsigned long, void*) (1 samples, 1.85%)</title><rect x="425.2" y="773" width="21.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="428.19" y="783.5" >f..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.85%)</title><rect x="381.5" y="741" width="21.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="384.48" y="751.5" >s..</text>
</g>
<g >
<title>__lll_lock_wake (2 samples, 3.70%)</title><rect x="272.2" y="789" width="43.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="275.22" y="799.5" >__ll..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 1.85%)</title><rect x="490.7" y="325" width="21.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="493.74" y="335.5" >_..</text>
</g>
<g >
<title>sched_yield (1 samples, 1.85%)</title><rect x="250.4" y="789" width="21.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="253.37" y="799.5" >s..</text>
</g>
<g >
<title>Trans_delegate::after_commit(THD*, bool) (1 samples, 1.85%)</title><rect x="949.6" y="661" width="21.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="952.63" y="671.5" >T..</text>
</g>
<g >
<title>Fil_shard::flush_file_redo() (3 samples, 5.56%)</title><rect x="315.9" y="773" width="65.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="318.93" y="783.5" >Fil_sha..</text>
</g>
<g >
<title>binary_log::transaction::compression::Zstd_comp::close() (3 samples, 5.56%)</title><rect x="971.5" y="645" width="65.5" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="974.48" y="655.5" >binary_..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.85%)</title><rect x="250.4" y="693" width="21.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="253.37" y="703.5" >f..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.85%)</title><rect x="53.7" y="693" width="21.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="56.70" y="703.5" >_..</text>
</g>
<g >
<title>blk_mq_sched_insert_requests (3 samples, 5.56%)</title><rect x="862.2" y="437" width="65.6" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="865.22" y="447.5" >blk_mq_..</text>
</g>
<g >
<title>net_rx_action (5 samples, 9.26%)</title><rect x="534.4" y="229" width="109.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="537.44" y="239.5" >net_rx_action</text>
</g>
<g >
<title>do_futex (4 samples, 7.41%)</title><rect x="141.1" y="773" width="87.4" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="144.11" y="783.5" >do_futex</text>
</g>
<g >
<title>__lll_lock_wake (1 samples, 1.85%)</title><rect x="381.5" y="789" width="21.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="384.48" y="799.5" >_..</text>
</g>
<g >
<title>IO_CACHE_ostream::sync() (4 samples, 7.41%)</title><rect x="862.2" y="645" width="87.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="865.22" y="655.5" >IO_CACHE_o..</text>
</g>
<g >
<title>__ip_queue_xmit (5 samples, 9.26%)</title><rect x="534.4" y="309" width="109.3" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="537.44" y="319.5" >__ip_queue_xmit</text>
</g>
<g >
<title>[unknown] (2 samples, 3.70%)</title><rect x="10.0" y="837" width="43.7" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[unk..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.85%)</title><rect x="53.7" y="709" width="21.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="56.70" y="719.5" >_..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::flush_thread_caches(THD*) (2 samples, 3.70%)</title><rect x="818.5" y="645" width="43.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="821.52" y="655.5" >MYSQ..</text>
</g>
<g >
<title>ssl3_read_bytes (1 samples, 1.85%)</title><rect x="490.7" y="613" width="21.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="493.74" y="623.5" >s..</text>
</g>
<g >
<title>Protocol_classic::send_ok(unsigned int, unsigned int, unsigned long long, unsigned long long, char const*) (5 samples, 9.26%)</title><rect x="534.4" y="741" width="109.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="537.44" y="751.5" >Protocol_clas..</text>
</g>
<g >
<title>Compressed_ostream::write(unsigned char const*, unsigned long long) (2 samples, 3.70%)</title><rect x="1037.0" y="629" width="43.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1040.04" y="639.5" >Comp..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 1.85%)</title><rect x="75.6" y="789" width="21.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="78.56" y="799.5" >s..</text>
</g>
<g >
<title>innobase_commit(handlerton*, THD*, bool) (1 samples, 1.85%)</title><rect x="1080.7" y="677" width="21.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1083.74" y="687.5" >i..</text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 9.26%)</title><rect x="534.4" y="325" width="109.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="537.44" y="335.5" >__tcp_transmi..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 1.85%)</title><rect x="53.7" y="789" width="21.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="56.70" y="799.5" >_..</text>
</g>
<g >
<title>ssl3_write (5 samples, 9.26%)</title><rect x="534.4" y="629" width="109.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="537.44" y="639.5" >ssl3_write</text>
</g>
<g >
<title>IO_CACHE_binlog_cache_storage::reset() (1 samples, 1.85%)</title><rect x="840.4" y="597" width="21.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="843.37" y="607.5" >I..</text>
</g>
<g >
<title>futex_wake (1 samples, 1.85%)</title><rect x="53.7" y="757" width="21.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="56.70" y="767.5" >f..</text>
</g>
<g >
<title>binlog_cache_data::compress(THD*) (5 samples, 9.26%)</title><rect x="971.5" y="661" width="109.2" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="974.48" y="671.5" >binlog_cache_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 9.26%)</title><rect x="141.1" y="821" width="109.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="144.11" y="831.5" >entry_SYSCALL..</text>
</g>
<g >
<title>ZSTD_compressContinue_internal (3 samples, 5.56%)</title><rect x="971.5" y="581" width="65.5" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="974.48" y="591.5" >ZSTD_co..</text>
</g>
<g >
<title>generic_perform_write (1 samples, 1.85%)</title><rect x="425.2" y="597" width="21.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="428.19" y="607.5" >g..</text>
</g>
<g >
<title>ksys_read (1 samples, 1.85%)</title><rect x="490.7" y="469" width="21.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="493.74" y="479.5" >k..</text>
</g>
<g >
<title>parse_sql(THD*, Parser_state*, Object_creation_ctx*) (3 samples, 5.56%)</title><rect x="1124.4" y="741" width="65.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1127.44" y="751.5" >parse_s..</text>
</g>
<g >
<title>__schedule (2 samples, 3.70%)</title><rect x="141.1" y="709" width="43.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="144.11" y="719.5" >__sc..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="425.2" y="693" width="21.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="428.19" y="703.5" >e..</text>
</g>
<g >
<title>PTI_text_literal_text_string::itemize(Parse_context*, Item**) (1 samples, 1.85%)</title><rect x="1146.3" y="661" width="21.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1149.30" y="671.5" >P..</text>
</g>
<g >
<title>THD::sql_parser() (3 samples, 5.56%)</title><rect x="1124.4" y="725" width="65.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="1127.44" y="735.5" >THD::sq..</text>
</g>
<g >
<title>tcp_v4_rcv (5 samples, 9.26%)</title><rect x="534.4" y="133" width="109.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="537.44" y="143.5" >tcp_v4_rcv</text>
</g>
<g >
<title>ssl3_read (1 samples, 1.85%)</title><rect x="490.7" y="645" width="21.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="493.74" y="655.5" >s..</text>
</g>
<g >
<title>log_writer(log_t*) (2 samples, 3.70%)</title><rect x="403.3" y="805" width="43.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="406.33" y="815.5" >log_..</text>
</g>
<g >
<title>os_file_write_page(IORequest&amp;, char const*, int, unsigned char const*, unsigned long, unsigned long, file::Block const*) (1 samples, 1.85%)</title><rect x="425.2" y="725" width="21.8" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="428.19" y="735.5" >o..</text>
</g>
<g >
<title>binlog_cache_data::finalize(THD*, Log_event*) (5 samples, 9.26%)</title><rect x="971.5" y="677" width="109.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="974.48" y="687.5" >binlog_cache_..</text>
</g>
<g >
<title>ssl3_write_pending (5 samples, 9.26%)</title><rect x="534.4" y="581" width="109.3" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="537.44" y="591.5" >ssl3_write_pe..</text>
</g>
<g >
<title>ha_commit_low(THD*, bool, bool) (1 samples, 1.85%)</title><rect x="796.7" y="645" width="21.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="799.67" y="655.5" >h..</text>
</g>
<g >
<title>ha_innobase::write_row(unsigned char*) (3 samples, 5.56%)</title><rect x="709.3" y="661" width="65.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="712.26" y="671.5" >ha_inno..</text>
</g>
<g >
<title>vio_ssl_read(Vio*, unsigned char*, unsigned long) (1 samples, 1.85%)</title><rect x="490.7" y="693" width="21.9" height="15.0" fill="rgb(87,198,198)" rx="2" ry="2" />
<text  x="493.74" y="703.5" >v..</text>
</g>
<g >
<title>do_futex (1 samples, 1.85%)</title><rect x="53.7" y="773" width="21.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="56.70" y="783.5" >d..</text>
</g>
<g >
<title>__napi_poll (5 samples, 9.26%)</title><rect x="534.4" y="213" width="109.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="537.44" y="223.5" >__napi_poll</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="294.1" y="757" width="21.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="297.07" y="767.5" >d..</text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.85%)</title><rect x="447.0" y="677" width="21.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="450.04" y="687.5" >p..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::write_transaction(THD*, binlog_cache_data*, Binlog_event_writer*) (1 samples, 1.85%)</title><rect x="818.5" y="613" width="21.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="821.52" y="623.5" >M..</text>
</g>
<g >
<title>THD::binlog_write_table_map(TABLE*, bool, bool) (1 samples, 1.85%)</title><rect x="687.4" y="645" width="21.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="690.41" y="655.5" >T..</text>
</g>
<g >
<title>dd::cache::Dictionary_client::commit_modified_objects() (1 samples, 1.85%)</title><rect x="774.8" y="725" width="21.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="777.81" y="735.5" >d..</text>
</g>
<g >
<title>rw_lock_s_lock(rw_lock_t*, ut::Location) (1 samples, 1.85%)</title><rect x="796.7" y="485" width="21.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="799.67" y="495.5" >r..</text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (3 samples, 5.56%)</title><rect x="862.2" y="373" width="65.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="865.22" y="383.5" >__blk_m..</text>
</g>
<g >
<title>ZSTD_buildSequencesStatistics (1 samples, 1.85%)</title><rect x="993.3" y="549" width="21.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="996.33" y="559.5" >Z..</text>
</g>
<g >
<title>mysqld (54 samples, 100.00%)</title><rect x="10.0" y="853" width="1180.0" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >mysqld</text>
</g>
<g >
<title>innobase_commit_low(trx_t*) (1 samples, 1.85%)</title><rect x="796.7" y="613" width="21.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="799.67" y="623.5" >i..</text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 1.85%)</title><rect x="490.7" y="341" width="21.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="493.74" y="351.5" >_..</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (3 samples, 5.56%)</title><rect x="862.2" y="405" width="65.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="865.22" y="415.5" >__blk_m..</text>
</g>
<g >
<title>HUF_compress_internal (1 samples, 1.85%)</title><rect x="1015.2" y="517" width="21.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1018.19" y="527.5" >H..</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 1.85%)</title><rect x="534.4" y="101" width="21.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="537.44" y="111.5" >_..</text>
</g>
<g >
<title>blk_flush_plug (2 samples, 3.70%)</title><rect x="315.9" y="581" width="43.7" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="318.93" y="591.5" >blk_..</text>
</g>
<g >
<title>ZSTD_compressContinue (3 samples, 5.56%)</title><rect x="971.5" y="597" width="65.5" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="974.48" y="607.5" >ZSTD_co..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 5.56%)</title><rect x="556.3" y="53" width="65.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="559.30" y="63.5" >_raw_sp..</text>
</g>
<g >
<title>blk_mq_flush_plug_list (3 samples, 5.56%)</title><rect x="862.2" y="453" width="65.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="865.22" y="463.5" >blk_mq_..</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 1.85%)</title><rect x="75.6" y="741" width="21.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="78.56" y="751.5" >_..</text>
</g>
<g >
<title>virtio_queue_rq (2 samples, 3.70%)</title><rect x="315.9" y="437" width="43.7" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="318.93" y="447.5" >virt..</text>
</g>
<g >
<title>THD::send_statement_status() (5 samples, 9.26%)</title><rect x="534.4" y="757" width="109.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="537.44" y="767.5" >THD::send_sta..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 1.85%)</title><rect x="403.3" y="789" width="21.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="406.33" y="799.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 1.85%)</title><rect x="206.7" y="725" width="21.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="209.67" y="735.5" >_..</text>
</g>
<g >
<title>tcp_write_xmit (5 samples, 9.26%)</title><rect x="534.4" y="341" width="109.3" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="537.44" y="351.5" >tcp_write_xmit</text>
</g>
<g >
<title>__write (5 samples, 9.26%)</title><rect x="534.4" y="517" width="109.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="537.44" y="527.5" >__write</text>
</g>
<g >
<title>row_insert_for_mysql_using_ins_graph(unsigned char const*, row_prebuilt_t*) (3 samples, 5.56%)</title><rect x="709.3" y="645" width="65.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="712.26" y="655.5" >row_ins..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void (*)(log_t*), log_t*&gt; &gt; &gt;::_M_run() (9 samples, 16.67%)</title><rect x="272.2" y="821" width="196.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="275.22" y="831.5" >std::thread::_State_impl&lt;..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="381.5" y="773" width="21.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="384.48" y="783.5" >e..</text>
</g>
<g >
<title>ZSTD_flushStream (3 samples, 5.56%)</title><rect x="971.5" y="629" width="65.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="974.48" y="639.5" >ZSTD_fl..</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 7.41%)</title><rect x="862.2" y="597" width="87.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="865.22" y="607.5" >do_syscall..</text>
</g>
<g >
<title>ssl3_read_n (1 samples, 1.85%)</title><rect x="490.7" y="581" width="21.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="493.74" y="591.5" >s..</text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (2 samples, 3.70%)</title><rect x="315.9" y="469" width="43.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="318.93" y="479.5" >__bl..</text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (2 samples, 3.70%)</title><rect x="315.9" y="501" width="43.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="318.93" y="511.5" >blk_..</text>
</g>
<g >
<title>__schedule (1 samples, 1.85%)</title><rect x="250.4" y="709" width="21.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="253.37" y="719.5" >_..</text>
</g>
<g >
<title>HUF_compress4X_repeat (1 samples, 1.85%)</title><rect x="1015.2" y="533" width="21.8" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="1018.19" y="543.5" >H..</text>
</g>
<g >
<title>do_writepages (3 samples, 5.56%)</title><rect x="862.2" y="517" width="65.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="865.22" y="527.5" >do_writ..</text>
</g>
<g >
<title>new_sync_read (1 samples, 1.85%)</title><rect x="490.7" y="437" width="21.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="493.74" y="447.5" >n..</text>
</g>
<g >
<title>vfs_read (1 samples, 1.85%)</title><rect x="490.7" y="453" width="21.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="493.74" y="463.5" >v..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.85%)</title><rect x="927.8" y="501" width="21.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="930.78" y="511.5" >_..</text>
</g>
<g >
<title>Diagnostics_area::reset_diagnostics_area() (1 samples, 1.85%)</title><rect x="468.9" y="789" width="21.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="471.89" y="799.5" >D..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.85%)</title><rect x="294.1" y="725" width="21.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="297.07" y="735.5" >s..</text>
</g>
<g >
<title>ssl3_write_bytes (5 samples, 9.26%)</title><rect x="534.4" y="613" width="109.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="537.44" y="623.5" >ssl3_write_by..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 1.85%)</title><rect x="228.5" y="789" width="21.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="231.52" y="799.5" >s..</text>
</g>
<g >
<title>sock_write_iter (5 samples, 9.26%)</title><rect x="534.4" y="421" width="109.3" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="537.44" y="431.5" >sock_write_iter</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.85%)</title><rect x="250.4" y="677" width="21.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="253.37" y="687.5" >f..</text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 5.56%)</title><rect x="556.3" y="101" width="65.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="559.30" y="111.5" >tcp_rcv..</text>
</g>
<g >
<title>SSL_write (5 samples, 9.26%)</title><rect x="534.4" y="661" width="109.3" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="537.44" y="671.5" >SSL_write</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 1.85%)</title><rect x="621.9" y="117" width="21.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="624.85" y="127.5" >t..</text>
</g>
<g >
<title>posix_get_realtime_timespec (1 samples, 1.85%)</title><rect x="447.0" y="741" width="21.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="450.04" y="751.5" >p..</text>
</g>
<g >
<title>row_ins_clust_index_entry(dict_index_t*, dtuple_t*, que_thr_t*, bool) (2 samples, 3.70%)</title><rect x="731.1" y="613" width="43.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="734.11" y="623.5" >row_..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.85%)</title><rect x="10.0" y="661" width="21.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >f..</text>
</g>
<g >
<title>pfs_spawn_thread (33 samples, 61.11%)</title><rect x="468.9" y="821" width="721.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="471.89" y="831.5" >pfs_spawn_thread</text>
</g>
<g >
<title>execute_native_thread_routine (10 samples, 18.52%)</title><rect x="250.4" y="837" width="218.5" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="253.37" y="847.5" >execute_native_thread_routine</text>
</g>
<g >
<title>buf_page_get_gen(page_id_t const&amp;, page_size_t const&amp;, unsigned long, buf_block_t*, Page_fetch, ut::Location, mtr_t*, bool) (1 samples, 1.85%)</title><rect x="796.7" y="549" width="21.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="799.67" y="559.5" >b..</text>
</g>
<g >
<title>do_writepages (2 samples, 3.70%)</title><rect x="315.9" y="629" width="43.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="318.93" y="639.5" >do_w..</text>
</g>
<g >
<title>futex_wait (4 samples, 7.41%)</title><rect x="141.1" y="757" width="87.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="144.11" y="767.5" >futex_wait</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 1.85%)</title><rect x="10.0" y="677" width="21.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >f..</text>
</g>
<g >
<title>ZSTD_resetCCtx_internal (2 samples, 3.70%)</title><rect x="1037.0" y="549" width="43.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1040.04" y="559.5" >ZSTD..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (1 samples, 1.85%)</title><rect x="228.5" y="773" width="21.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="231.52" y="783.5" >s..</text>
</g>
<g >
<title>SSL_read (1 samples, 1.85%)</title><rect x="490.7" y="677" width="21.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="493.74" y="687.5" >S..</text>
</g>
<g >
<title>Writeset_trx_dependency_tracker::get_dependency(THD*, long&amp;, long&amp;) (1 samples, 1.85%)</title><rect x="818.5" y="597" width="21.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="821.52" y="607.5" >W..</text>
</g>
<g >
<title>trx_undo_gtid_add_update_undo(trx_t*, bool, bool) (1 samples, 1.85%)</title><rect x="796.7" y="581" width="21.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="799.67" y="591.5" >t..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (1 samples, 1.85%)</title><rect x="228.5" y="757" width="21.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="231.52" y="767.5" >s..</text>
</g>
<g >
<title>bread_conv (1 samples, 1.85%)</title><rect x="490.7" y="533" width="21.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="493.74" y="543.5" >b..</text>
</g>
<g >
<title>vfs_write (1 samples, 1.85%)</title><rect x="425.2" y="645" width="21.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="428.19" y="655.5" >v..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (3 samples, 5.56%)</title><rect x="862.2" y="533" width="65.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="865.22" y="543.5" >__filem..</text>
</g>
<g >
<title>ZSTD_compressStream2 (2 samples, 3.70%)</title><rect x="1037.0" y="597" width="43.7" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1040.04" y="607.5" >ZSTD..</text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 7.41%)</title><rect x="141.1" y="789" width="87.4" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="144.11" y="799.5" >__x64_sys_..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="10.0" y="789" width="21.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="381.5" y="757" width="21.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="384.48" y="767.5" >d..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 1.85%)</title><rect x="10.0" y="773" width="21.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >_..</text>
</g>
<g >
<title>binlog_start_trans_and_stmt(THD*, Log_event*) (1 samples, 1.85%)</title><rect x="687.4" y="629" width="21.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="690.41" y="639.5" >b..</text>
</g>
<g >
<title>dispatch_sql_command(THD*, Parser_state*) (25 samples, 46.30%)</title><rect x="643.7" y="757" width="546.3" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="646.70" y="767.5" >dispatch_sql_command(THD*, Parser_state*)</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="10.0" y="805" width="21.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >e..</text>
</g>
<g >
<title>futex_wait_setup (1 samples, 1.85%)</title><rect x="206.7" y="741" width="21.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="209.67" y="751.5" >f..</text>
</g>
<g >
<title>Rows_log_event::is_rbr_logging_format() const (1 samples, 1.85%)</title><rect x="665.6" y="661" width="21.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="668.56" y="671.5" >R..</text>
</g>
<g >
<title>lock_unlock_table_autoinc(trx_t*) (1 samples, 1.85%)</title><rect x="1102.6" y="661" width="21.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1105.59" y="671.5" >l..</text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 1.85%)</title><rect x="490.7" y="389" width="21.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="493.74" y="399.5" >t..</text>
</g>
<g >
<title>trans_commit_stmt(THD*, bool) (2 samples, 3.70%)</title><rect x="1080.7" y="725" width="43.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1083.74" y="735.5" >tran..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::ordered_commit(THD*, bool, bool) (8 samples, 14.81%)</title><rect x="796.7" y="677" width="174.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="799.67" y="687.5" >MYSQL_BIN_LOG::ordered..</text>
</g>
<g >
<title>bio_read_intern (1 samples, 1.85%)</title><rect x="490.7" y="549" width="21.9" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="493.74" y="559.5" >b..</text>
</g>
<g >
<title>sock_read_iter (1 samples, 1.85%)</title><rect x="490.7" y="421" width="21.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="493.74" y="431.5" >s..</text>
</g>
<g >
<title>ssl_write_internal (5 samples, 9.26%)</title><rect x="534.4" y="645" width="109.3" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="537.44" y="655.5" >ssl_write_int..</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 1.85%)</title><rect x="425.2" y="613" width="21.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="428.19" y="623.5" >e..</text>
</g>
<g >
<title>ext4_sync_file (4 samples, 7.41%)</title><rect x="862.2" y="565" width="87.4" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="865.22" y="575.5" >ext4_sync_..</text>
</g>
<g >
<title>new_sync_write (5 samples, 9.26%)</title><rect x="534.4" y="437" width="109.3" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="537.44" y="447.5" >new_sync_write</text>
</g>
<g >
<title>do_command(THD*) (32 samples, 59.26%)</title><rect x="490.7" y="789" width="699.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="493.74" y="799.5" >do_command(THD*)</text>
</g>
<g >
<title>jbd2_complete_transaction (1 samples, 1.85%)</title><rect x="927.8" y="549" width="21.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="930.78" y="559.5" >j..</text>
</g>
<g >
<title>binlog_log_row(TABLE*, unsigned char const*, unsigned char const*, bool (*)(THD*, TABLE*, bool, unsigned char const*, unsigned char const*)) (1 samples, 1.85%)</title><rect x="687.4" y="661" width="21.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="690.41" y="671.5" >b..</text>
</g>
<g >
<title>inet6_recvmsg (1 samples, 1.85%)</title><rect x="490.7" y="405" width="21.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="493.74" y="415.5" >i..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::process_commit_stage_queue(THD*, THD*) (1 samples, 1.85%)</title><rect x="796.7" y="661" width="21.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="799.67" y="671.5" >M..</text>
</g>
<g >
<title>bio_write_intern (5 samples, 9.26%)</title><rect x="534.4" y="549" width="109.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="537.44" y="559.5" >bio_write_int..</text>
</g>
<g >
<title>do_futex (1 samples, 1.85%)</title><rect x="10.0" y="757" width="21.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >d..</text>
</g>
<g >
<title>btr_cur_optimistic_insert(unsigned long, btr_cur_t*, unsigned long**, mem_block_info_t**, dtuple_t*, unsigned char**, big_rec_t**, que_thr_t*, mtr_t*) (1 samples, 1.85%)</title><rect x="753.0" y="581" width="21.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="755.96" y="591.5" >b..</text>
</g>
<g >
<title>vio_ssl_write(Vio*, unsigned char const*, unsigned long) (5 samples, 9.26%)</title><rect x="534.4" y="677" width="109.3" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="537.44" y="687.5" >vio_ssl_write..</text>
</g>
<g >
<title>__x64_sys_pwrite64 (1 samples, 1.85%)</title><rect x="425.2" y="661" width="21.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="428.19" y="671.5" >_..</text>
</g>
<g >
<title>__futex_abstimed_wait_common (7 samples, 12.96%)</title><rect x="97.4" y="837" width="153.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="100.41" y="847.5" >__futex_abstimed_wa..</text>
</g>
<g >
<title>ha_prepare_low(THD*, bool) (1 samples, 1.85%)</title><rect x="1102.6" y="693" width="21.8" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="1105.59" y="703.5" >h..</text>
</g>
<g >
<title>os_file_write_func(IORequest&amp;, char const*, int, void const*, unsigned long, unsigned long) (1 samples, 1.85%)</title><rect x="425.2" y="741" width="21.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="428.19" y="751.5" >o..</text>
</g>
<g >
<title>std::_Rb_tree_decrement(std::_Rb_tree_node_base*) (1 samples, 1.85%)</title><rect x="818.5" y="581" width="21.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="821.52" y="591.5" >s..</text>
</g>
<g >
<title>ssl3_get_record (1 samples, 1.85%)</title><rect x="490.7" y="597" width="21.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="493.74" y="607.5" >s..</text>
</g>
<g >
<title>schedule (1 samples, 1.85%)</title><rect x="250.4" y="725" width="21.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="253.37" y="735.5" >s..</text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (3 samples, 5.56%)</title><rect x="862.2" y="421" width="65.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="865.22" y="431.5" >__blk_m..</text>
</g>
<g >
<title>iowrite16 (3 samples, 5.56%)</title><rect x="862.2" y="261" width="65.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="865.22" y="271.5" >iowrite16</text>
</g>
<g >
<title>log_flusher(log_t*) (5 samples, 9.26%)</title><rect x="272.2" y="805" width="109.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="275.22" y="815.5" >log_flusher(l..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.85%)</title><rect x="927.8" y="485" width="21.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="930.78" y="495.5" >_..</text>
</g>
<g >
<title>Sql_cmd_insert_values::execute_inner(THD*) (5 samples, 9.26%)</title><rect x="665.6" y="709" width="109.2" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="668.56" y="719.5" >Sql_cmd_inser..</text>
</g>
<g >
<title>my_charset_same(CHARSET_INFO const*, CHARSET_INFO const*) (1 samples, 1.85%)</title><rect x="1146.3" y="645" width="21.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1149.30" y="655.5" >m..</text>
</g>
<g >
<title>ZSTD_compressLiterals (1 samples, 1.85%)</title><rect x="1015.2" y="549" width="21.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1018.19" y="559.5" >Z..</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 1.85%)</title><rect x="359.6" y="661" width="21.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="362.63" y="671.5" >_..</text>
</g>
<g >
<title>schedule (1 samples, 1.85%)</title><rect x="10.0" y="709" width="21.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >s..</text>
</g>
<g >
<title>do_ssl3_write (5 samples, 9.26%)</title><rect x="534.4" y="597" width="109.3" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="537.44" y="607.5" >do_ssl3_write</text>
</g>
<g >
<title>ZSTD_compressBlock_internal (3 samples, 5.56%)</title><rect x="971.5" y="565" width="65.5" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="974.48" y="575.5" >ZSTD_co..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void (*)()&gt; &gt; &gt;::_M_run() (1 samples, 1.85%)</title><rect x="250.4" y="821" width="21.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="253.37" y="831.5" >s..</text>
</g>
<g >
<title>iowrite16 (2 samples, 3.70%)</title><rect x="315.9" y="373" width="43.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="318.93" y="383.5" >iowr..</text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 1.85%)</title><rect x="425.2" y="565" width="21.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="428.19" y="575.5" >e..</text>
</g>
<g >
<title>handle_connection (33 samples, 61.11%)</title><rect x="468.9" y="805" width="721.1" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="471.89" y="815.5" >handle_connection</text>
</g>
<g >
<title>net_flush(NET*) (5 samples, 9.26%)</title><rect x="534.4" y="709" width="109.3" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="537.44" y="719.5" >net_flush(NET*)</text>
</g>
<g >
<title>ip_finish_output2 (5 samples, 9.26%)</title><rect x="534.4" y="293" width="109.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="537.44" y="303.5" >ip_finish_out..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.85%)</title><rect x="381.5" y="725" width="21.8" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="384.48" y="735.5" >s..</text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 1.85%)</title><rect x="10.0" y="725" width="21.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >f..</text>
</g>
<g >
<title>__GI_fsync (3 samples, 5.56%)</title><rect x="315.9" y="741" width="65.6" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="318.93" y="751.5" >__GI_fs..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.85%)</title><rect x="294.1" y="741" width="21.8" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="297.07" y="751.5" >s..</text>
</g>
<g >
<title>ZSTD_buildCTable (1 samples, 1.85%)</title><rect x="993.3" y="533" width="21.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="996.33" y="543.5" >Z..</text>
</g>
<g >
<title>__schedule (1 samples, 1.85%)</title><rect x="10.0" y="693" width="21.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >_..</text>
</g>
<g >
<title>futex_wait (1 samples, 1.85%)</title><rect x="10.0" y="741" width="21.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >f..</text>
</g>
<g >
<title>ZSTD_compressStream2 (3 samples, 5.56%)</title><rect x="971.5" y="613" width="65.5" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="974.48" y="623.5" >ZSTD_co..</text>
</g>
<g >
<title>new_sync_write (1 samples, 1.85%)</title><rect x="425.2" y="629" width="21.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="428.19" y="639.5" >n..</text>
</g>
<g >
<title>Fil_shard::redo_space_flush() (3 samples, 5.56%)</title><rect x="315.9" y="757" width="65.6" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="318.93" y="767.5" >Fil_sha..</text>
</g>
<g >
<title>ext4_writepages (3 samples, 5.56%)</title><rect x="862.2" y="501" width="65.6" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="865.22" y="511.5" >ext4_wr..</text>
</g>
<g >
<title>PT_insert::make_cmd(THD*) (2 samples, 3.70%)</title><rect x="1124.4" y="693" width="43.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="1127.44" y="703.5" >PT_i..</text>
</g>
<g >
<title>bwrite_conv (5 samples, 9.26%)</title><rect x="534.4" y="533" width="109.3" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="537.44" y="543.5" >bwrite_conv</text>
</g>
<g >
<title>__local_bh_enable_ip (5 samples, 9.26%)</title><rect x="534.4" y="277" width="109.3" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="537.44" y="287.5" >__local_bh_en..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 5.56%)</title><rect x="556.3" y="37" width="65.6" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="559.30" y="47.5" >_raw_sp..</text>
</g>
<g >
<title>Fil_shard::do_redo_io(IORequest const&amp;, page_id_t const&amp;, page_size_t const&amp;, unsigned long, unsigned long, void*) (1 samples, 1.85%)</title><rect x="425.2" y="757" width="21.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="428.19" y="767.5" >F..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="490.7" y="501" width="21.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="493.74" y="511.5" >e..</text>
</g>
<g >
<title>__tcp_push_pending_frames (5 samples, 9.26%)</title><rect x="534.4" y="357" width="109.3" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="537.44" y="367.5" >__tcp_push_pe..</text>
</g>
<g >
<title>HUF_buildCTable_wksp (1 samples, 1.85%)</title><rect x="1015.2" y="501" width="21.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="1018.19" y="511.5" >H..</text>
</g>
<g >
<title>trx_undo_assign_undo(trx_t*, trx_undo_ptr_t*, unsigned long) (1 samples, 1.85%)</title><rect x="796.7" y="565" width="21.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="799.67" y="575.5" >t..</text>
</g>
<g >
<title>ext4_sync_file (2 samples, 3.70%)</title><rect x="315.9" y="677" width="43.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="318.93" y="687.5" >ext4..</text>
</g>
<g >
<title>net_send_ok(THD*, unsigned int, unsigned int, unsigned long long, unsigned long long, char const*, bool) (5 samples, 9.26%)</title><rect x="534.4" y="725" width="109.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="537.44" y="735.5" >net_send_ok(T..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (5 samples, 9.26%)</title><rect x="534.4" y="181" width="109.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="537.44" y="191.5" >__netif_recei..</text>
</g>
<g >
<title>wake_up_q (1 samples, 1.85%)</title><rect x="53.7" y="741" width="21.9" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="56.70" y="751.5" >w..</text>
</g>
<g >
<title>log_flush_low(log_t&amp;) (3 samples, 5.56%)</title><rect x="315.9" y="789" width="65.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="318.93" y="799.5" >log_flu..</text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 1.85%)</title><rect x="447.0" y="757" width="21.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="450.04" y="767.5" >_..</text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (3 samples, 5.56%)</title><rect x="862.2" y="341" width="65.6" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="865.22" y="351.5" >blk_mq_..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::commit(THD*, bool) (13 samples, 24.07%)</title><rect x="796.7" y="693" width="284.0" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="799.67" y="703.5" >MYSQL_BIN_LOG::commit(THD*, bool)</text>
</g>
<g >
<title>log_writer_write_buffer(log_t&amp;, unsigned long) (1 samples, 1.85%)</title><rect x="425.2" y="789" width="21.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="428.19" y="799.5" >l..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::commit(THD*, bool) (1 samples, 1.85%)</title><rect x="1080.7" y="693" width="21.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1083.74" y="703.5" >M..</text>
</g>
<g >
<title>__GI___lll_lock_wait (1 samples, 1.85%)</title><rect x="10.0" y="821" width="21.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >_..</text>
</g>
<g >
<title>binlog_cache_data::flush(THD*, unsigned long long*, bool*) (2 samples, 3.70%)</title><rect x="818.5" y="629" width="43.7" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="821.52" y="639.5" >binl..</text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 1.85%)</title><rect x="447.0" y="693" width="21.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="450.04" y="703.5" >p..</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 1.85%)</title><rect x="359.6" y="645" width="21.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="362.63" y="655.5" >_..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (5 samples, 9.26%)</title><rect x="534.4" y="149" width="109.3" height="15.0" fill="rgb(76,188,188)" rx="2" ry="2" />
<text  x="537.44" y="159.5" >ip_protocol_d..</text>
</g>
<g >
<title>do_softirq (5 samples, 9.26%)</title><rect x="534.4" y="261" width="109.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="537.44" y="271.5" >do_softirq</text>
</g>
<g >
<title>__x64_sys_fdatasync (4 samples, 7.41%)</title><rect x="862.2" y="581" width="87.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="865.22" y="591.5" >__x64_sys_..</text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 1.85%)</title><rect x="425.2" y="581" width="21.8" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="428.19" y="591.5" >e..</text>
</g>
<g >
<title>blk_finish_plug (2 samples, 3.70%)</title><rect x="315.9" y="597" width="43.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="318.93" y="607.5" >blk_..</text>
</g>
<g >
<title>ip_local_deliver_finish (5 samples, 9.26%)</title><rect x="534.4" y="165" width="109.3" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="537.44" y="175.5" >ip_local_deli..</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 1.85%)</title><rect x="927.8" y="517" width="21.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="930.78" y="527.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="250.4" y="757" width="21.8" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="253.37" y="767.5" >d..</text>
</g>
<g >
<title>iowrite16 (3 samples, 5.56%)</title><rect x="862.2" y="277" width="65.6" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="865.22" y="287.5" >iowrite16</text>
</g>
<g >
<title>ktime_get_real_ts64 (1 samples, 1.85%)</title><rect x="447.0" y="725" width="21.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="450.04" y="735.5" >k..</text>
</g>
<g >
<title>blk_mq_sched_insert_requests (2 samples, 3.70%)</title><rect x="315.9" y="549" width="43.7" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="318.93" y="559.5" >blk_..</text>
</g>
<g >
<title>vp_notify (3 samples, 5.56%)</title><rect x="862.2" y="293" width="65.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="865.22" y="303.5" >vp_notify</text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 9.26%)</title><rect x="534.4" y="245" width="109.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="537.44" y="255.5" >__softirqentr..</text>
</g>
<g >
<title>LEX::reset() (1 samples, 1.85%)</title><rect x="643.7" y="725" width="21.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="646.70" y="735.5" >L..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 3.70%)</title><rect x="53.7" y="821" width="43.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="56.70" y="831.5" >entr..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::flush_and_set_pending_rows_event(THD*, Rows_log_event*, bool) (1 samples, 1.85%)</title><rect x="665.6" y="677" width="21.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="668.56" y="687.5" >M..</text>
</g>
<g >
<title>__GI___pthread_cond_broadcast (2 samples, 3.70%)</title><rect x="53.7" y="837" width="43.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="56.70" y="847.5" >__GI..</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (2 samples, 3.70%)</title><rect x="315.9" y="517" width="43.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="318.93" y="527.5" >__bl..</text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (2 samples, 3.70%)</title><rect x="315.9" y="485" width="43.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="318.93" y="495.5" >__bl..</text>
</g>
<g >
<title>tcp_recvmsg_locked (1 samples, 1.85%)</title><rect x="490.7" y="373" width="21.9" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="493.74" y="383.5" >t..</text>
</g>
<g >
<title>FSE_buildCTable_wksp (1 samples, 1.85%)</title><rect x="993.3" y="517" width="21.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="996.33" y="527.5" >F..</text>
</g>
<g >
<title>trx_commit_for_mysql(trx_t*) (1 samples, 1.85%)</title><rect x="796.7" y="597" width="21.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="799.67" y="607.5" >t..</text>
</g>
<g >
<title>THD::binlog_query(THD::enum_binlog_query_type, char const*, unsigned long, bool, bool, bool, int) (1 samples, 1.85%)</title><rect x="665.6" y="693" width="21.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="668.56" y="703.5" >T..</text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 5.56%)</title><rect x="141.1" y="741" width="65.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="144.11" y="751.5" >futex_w..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.85%)</title><rect x="425.2" y="677" width="21.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="428.19" y="687.5" >d..</text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (2 samples, 3.70%)</title><rect x="315.9" y="533" width="43.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="318.93" y="543.5" >__bl..</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 1.85%)</title><rect x="75.6" y="757" width="21.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="78.56" y="767.5" >_..</text>
</g>
<g >
<title>ZSTD_buildSeqStore (1 samples, 1.85%)</title><rect x="971.5" y="549" width="21.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="974.48" y="559.5" >Z..</text>
</g>
<g >
<title>write_record(THD*, TABLE*, COPY_INFO*, COPY_INFO*) (4 samples, 7.41%)</title><rect x="687.4" y="693" width="87.4" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="690.41" y="703.5" >write_reco..</text>
</g>
<g >
<title>fdatasync (4 samples, 7.41%)</title><rect x="862.2" y="629" width="87.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="865.22" y="639.5" >fdatasync</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="250.4" y="773" width="21.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="253.37" y="783.5" >e..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="294.1" y="773" width="21.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="297.07" y="783.5" >e..</text>
</g>
<g >
<title>net_write_packet(NET*, unsigned char const*, unsigned long) (5 samples, 9.26%)</title><rect x="534.4" y="693" width="109.3" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="537.44" y="703.5" >net_write_pac..</text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (3 samples, 5.56%)</title><rect x="862.2" y="389" width="65.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="865.22" y="399.5" >blk_mq_..</text>
</g>
<g >
<title>tcp_sendmsg_locked (5 samples, 9.26%)</title><rect x="534.4" y="373" width="109.3" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="537.44" y="383.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>bool stream_copy&lt;IO_CACHE_binlog_cache_storage, Basic_ostream&gt;(IO_CACHE_binlog_cache_storage*, Basic_ostream*, bool*) (2 samples, 3.70%)</title><rect x="1037.0" y="645" width="43.7" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1040.04" y="655.5" >bool..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 9.26%)</title><rect x="534.4" y="501" width="109.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="537.44" y="511.5" >entry_SYSCALL..</text>
</g>
<g >
<title>innobase_xa_prepare(handlerton*, THD*, bool) (1 samples, 1.85%)</title><rect x="1102.6" y="677" width="21.8" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="1105.59" y="687.5" >i..</text>
</g>
<g >
<title>row_ins_clust_index_entry_low(unsigned int, unsigned long, dict_index_t*, unsigned long, dtuple_t*, que_thr_t*, bool) (2 samples, 3.70%)</title><rect x="731.1" y="597" width="43.7" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="734.11" y="607.5" >row_..</text>
</g>
<g >
<title>schedule (3 samples, 5.56%)</title><rect x="141.1" y="725" width="65.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="144.11" y="735.5" >schedule</text>
</g>
<g >
<title>blk_finish_plug (3 samples, 5.56%)</title><rect x="862.2" y="485" width="65.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="865.22" y="495.5" >blk_fin..</text>
</g>
<g >
<title>row_ins_step(que_thr_t*) (2 samples, 3.70%)</title><rect x="731.1" y="629" width="43.7" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="734.11" y="639.5" >row_..</text>
</g>
<g >
<title>trans_commit(THD*, bool) (13 samples, 24.07%)</title><rect x="796.7" y="725" width="284.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="799.67" y="735.5" >trans_commit(THD*, bool)</text>
</g>
<g >
<title>ssl_read_internal (1 samples, 1.85%)</title><rect x="490.7" y="661" width="21.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="493.74" y="671.5" >s..</text>
</g>
<g >
<title>Buf_fetch_normal::get(buf_block_t*&amp;) (1 samples, 1.85%)</title><rect x="796.7" y="517" width="21.8" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="799.67" y="527.5" >B..</text>
</g>
<g >
<title>virtqueue_notify (2 samples, 3.70%)</title><rect x="315.9" y="421" width="43.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="318.93" y="431.5" >virt..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.85%)</title><rect x="447.0" y="789" width="21.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="450.04" y="799.5" >e..</text>
</g>
<g >
<title>ssl3_read_internal (1 samples, 1.85%)</title><rect x="490.7" y="629" width="21.9" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="493.74" y="639.5" >s..</text>
</g>
<g >
<title>ZSTD_compressBegin_internal (2 samples, 3.70%)</title><rect x="1037.0" y="565" width="43.7" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="1040.04" y="575.5" >ZSTD..</text>
</g>
<g >
<title>ha_commit_trans(THD*, bool, bool) (2 samples, 3.70%)</title><rect x="1080.7" y="709" width="43.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="1083.74" y="719.5" >ha_c..</text>
</g>
</g>
</svg>
