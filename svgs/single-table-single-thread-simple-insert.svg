<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >single-table-single-thread-simple-insert</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>__schedule (1 samples, 0.84%)</title><rect x="426.5" y="277" width="9.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="429.47" y="287.5" ></text>
</g>
<g >
<title>schedule (3 samples, 2.52%)</title><rect x="644.6" y="725" width="29.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="647.62" y="735.5" >sc..</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 1.68%)</title><rect x="436.4" y="293" width="19.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="439.39" y="303.5" ></text>
</g>
<g >
<title>IO_CACHE_ostream::sync() (3 samples, 2.52%)</title><rect x="1061.1" y="645" width="29.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1064.09" y="655.5" >IO..</text>
</g>
<g >
<title>blk_flush_plug (3 samples, 2.52%)</title><rect x="29.8" y="757" width="29.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="32.83" y="767.5" >bl..</text>
</g>
<g >
<title>plugin_foreach_with_mask(THD*, bool (**)(THD*, st_plugin_int*, void*), int, unsigned int, void*) (2 samples, 1.68%)</title><rect x="1021.4" y="597" width="19.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1024.43" y="607.5" ></text>
</g>
<g >
<title>cli_safe_read_with_ok (3 samples, 2.52%)</title><rect x="406.6" y="741" width="29.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="409.64" y="751.5" >cl..</text>
</g>
<g >
<title>Clone_persist_gtid::periodic_write() (2 samples, 1.68%)</title><rect x="733.9" y="805" width="19.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="736.87" y="815.5" ></text>
</g>
<g >
<title>innobase_commit_low(trx_t*) (3 samples, 2.52%)</title><rect x="991.7" y="613" width="29.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="994.68" y="623.5" >in..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (3 samples, 2.52%)</title><rect x="644.6" y="677" width="29.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="647.62" y="687.5" >fi..</text>
</g>
<g >
<title>net_write_packet(NET*, unsigned char const*, unsigned long) (5 samples, 4.20%)</title><rect x="892.5" y="693" width="49.6" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="895.52" y="703.5" >net_w..</text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 1.68%)</title><rect x="436.4" y="165" width="19.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="439.39" y="175.5" ></text>
</g>
<g >
<title>virtqueue_notify (2 samples, 1.68%)</title><rect x="1061.1" y="309" width="19.8" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="1064.09" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.68%)</title><rect x="753.7" y="709" width="19.8" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="756.70" y="719.5" ></text>
</g>
<g >
<title>Compressed_ostream::write(unsigned char const*, unsigned long long) (4 samples, 3.36%)</title><rect x="1140.4" y="629" width="39.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1143.42" y="639.5" >Com..</text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.84%)</title><rect x="684.3" y="757" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="687.29" y="767.5" ></text>
</g>
<g >
<title>ppoll (1 samples, 0.84%)</title><rect x="872.7" y="661" width="9.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="875.69" y="671.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.84%)</title><rect x="119.1" y="773" width="9.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="122.08" y="783.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (10 samples, 8.40%)</title><rect x="129.0" y="725" width="99.2" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="131.99" y="735.5" >__blk_mq_run..</text>
</g>
<g >
<title>process_backlog (1 samples, 0.84%)</title><rect x="347.1" y="213" width="10.0" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="350.14" y="223.5" ></text>
</g>
<g >
<title>ZSTD_CCtx_init_compressStream2 (3 samples, 2.52%)</title><rect x="1150.3" y="581" width="29.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1153.34" y="591.5" >ZS..</text>
</g>
<g >
<title>binlog_cache_data::finalize(THD*, Log_event*) (8 samples, 6.72%)</title><rect x="1100.8" y="677" width="79.3" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1103.76" y="687.5" >binlog_ca..</text>
</g>
<g >
<title>Sql_cmd_insert_values::execute_inner(THD*) (1 samples, 0.84%)</title><rect x="961.9" y="709" width="9.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="964.93" y="719.5" ></text>
</g>
<g >
<title>__lll_lock_wake (1 samples, 0.84%)</title><rect x="803.3" y="789" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="806.28" y="799.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.84%)</title><rect x="376.9" y="341" width="9.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="379.89" y="351.5" ></text>
</g>
<g >
<title>vp_notify (2 samples, 1.68%)</title><rect x="39.7" y="581" width="19.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="42.75" y="591.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 0.84%)</title><rect x="733.9" y="549" width="9.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="736.87" y="559.5" ></text>
</g>
<g >
<title>os_event::get_wait_timelimit(std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;) (1 samples, 0.84%)</title><rect x="773.5" y="773" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="776.53" y="783.5" ></text>
</g>
<g >
<title>bwrite_conv (5 samples, 4.20%)</title><rect x="892.5" y="533" width="49.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="895.52" y="543.5" >bwrit..</text>
</g>
<g >
<title>__jbd2_journal_refile_buffer (1 samples, 0.84%)</title><rect x="10.0" y="773" width="9.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>check_column_grant_in_table_ref(THD*, TABLE_LIST*, char const*, unsigned long, unsigned long) [clone .localalias.1345] (1 samples, 0.84%)</title><rect x="952.0" y="613" width="9.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="955.02" y="623.5" ></text>
</g>
<g >
<title>ssl3_get_record (3 samples, 2.52%)</title><rect x="406.6" y="581" width="29.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="409.64" y="591.5" >ss..</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="981.8" y="453" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="984.76" y="463.5" ></text>
</g>
<g >
<title>vp_notify (2 samples, 1.68%)</title><rect x="1061.1" y="293" width="19.8" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1064.09" y="303.5" ></text>
</g>
<g >
<title>my_net_read(NET*) (3 samples, 2.52%)</title><rect x="852.9" y="741" width="29.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="855.86" y="751.5" >my..</text>
</g>
<g >
<title>__tcp_transmit_skb (4 samples, 3.36%)</title><rect x="892.5" y="325" width="39.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="895.52" y="335.5" >__t..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.84%)</title><rect x="714.0" y="741" width="9.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="717.03" y="751.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 3.36%)</title><rect x="892.5" y="229" width="39.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="895.52" y="239.5" >net..</text>
</g>
<g >
<title>LEX::create_query_expr_and_block(THD*, Query_block*, Item*, Item*, enum_parsing_context) (1 samples, 0.84%)</title><rect x="942.1" y="693" width="9.9" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="945.10" y="703.5" ></text>
</g>
<g >
<title>__GI___pwrite (1 samples, 0.84%)</title><rect x="813.2" y="709" width="9.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="816.19" y="719.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void (*)(log_t*), log_t*&gt; &gt; &gt;::_M_run() (10 samples, 8.40%)</title><rect x="753.7" y="821" width="99.2" height="15.0" fill="rgb(52,166,166)" rx="2" ry="2" />
<text  x="756.70" y="831.5" >std::thread:..</text>
</g>
<g >
<title>__napi_poll (4 samples, 3.36%)</title><rect x="892.5" y="213" width="39.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="895.52" y="223.5" >__n..</text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (3 samples, 2.52%)</title><rect x="29.8" y="645" width="29.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="32.83" y="655.5" >__..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.84%)</title><rect x="347.1" y="293" width="10.0" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="350.14" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="29.8" y="581" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="32.83" y="591.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (3 samples, 2.52%)</title><rect x="29.8" y="741" width="29.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="32.83" y="751.5" >bl..</text>
</g>
<g >
<title>meth_dealloc (1 samples, 0.84%)</title><rect x="396.7" y="821" width="9.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="399.72" y="831.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (1 samples, 0.84%)</title><rect x="961.9" y="629" width="9.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="964.93" y="639.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (2 samples, 1.68%)</title><rect x="753.7" y="661" width="19.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="756.70" y="671.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 1.68%)</title><rect x="436.4" y="101" width="19.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="439.39" y="111.5" ></text>
</g>
<g >
<title>read (3 samples, 2.52%)</title><rect x="406.6" y="501" width="29.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="409.64" y="511.5" >read</text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="39.7" y="549" width="19.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="42.75" y="559.5" ></text>
</g>
<g >
<title>mempool_alloc (1 samples, 0.84%)</title><rect x="109.2" y="741" width="9.9" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="112.16" y="751.5" ></text>
</g>
<g >
<title>ssl_write_internal (4 samples, 3.36%)</title><rect x="347.1" y="661" width="39.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="350.14" y="671.5" >ssl..</text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.84%)</title><rect x="981.8" y="501" width="9.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="984.76" y="511.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 1.68%)</title><rect x="753.7" y="629" width="19.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="756.70" y="639.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.84%)</title><rect x="981.8" y="533" width="9.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="984.76" y="543.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 3.36%)</title><rect x="892.5" y="165" width="39.7" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="895.52" y="175.5" >ip_..</text>
</g>
<g >
<title>mysql_send_query (6 samples, 5.04%)</title><rect x="327.3" y="773" width="59.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="330.31" y="783.5" >mysql_..</text>
</g>
<g >
<title>mlog_write_ulint(unsigned char*, unsigned long, mlog_id_t, mtr_t*) (1 samples, 0.84%)</title><rect x="1011.5" y="533" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1014.51" y="543.5" ></text>
</g>
<g >
<title>__GI_fsync (2 samples, 1.68%)</title><rect x="753.7" y="741" width="19.8" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="756.70" y="751.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.84%)</title><rect x="426.5" y="261" width="9.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="429.47" y="271.5" ></text>
</g>
<g >
<title>os_file_write_page(IORequest&amp;, char const*, int, unsigned char const*, unsigned long, unsigned long, file::Block const*) (1 samples, 0.84%)</title><rect x="813.2" y="725" width="9.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="816.19" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.52%)</title><rect x="1061.1" y="597" width="29.7" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="1064.09" y="607.5" >do..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="99.2" y="741" width="10.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="102.24" y="751.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.84%)</title><rect x="347.1" y="101" width="10.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="350.14" y="111.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.84%)</title><rect x="19.9" y="773" width="9.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="22.92" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (1 samples, 0.84%)</title><rect x="872.7" y="613" width="9.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="875.69" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="714.0" y="773" width="9.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="717.03" y="783.5" ></text>
</g>
<g >
<title>cli_read_query_result(MYSQL*) (3 samples, 2.52%)</title><rect x="406.6" y="757" width="29.8" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="409.64" y="767.5" >cl..</text>
</g>
<g >
<title>System_table_access::close_table(THD*, TABLE*, Open_tables_backup*, bool, bool) (1 samples, 0.84%)</title><rect x="733.9" y="725" width="9.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="736.87" y="735.5" ></text>
</g>
<g >
<title>all (119 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.84%)</title><rect x="813.2" y="597" width="9.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="816.19" y="607.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.84%)</title><rect x="733.9" y="629" width="9.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="736.87" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.84%)</title><rect x="1080.9" y="517" width="9.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1083.92" y="527.5" ></text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="39.7" y="565" width="19.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="42.75" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (1 samples, 0.84%)</title><rect x="79.4" y="693" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="82.41" y="703.5" ></text>
</g>
<g >
<title>ssl_read_internal (3 samples, 2.52%)</title><rect x="406.6" y="645" width="29.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="409.64" y="655.5" >ss..</text>
</g>
<g >
<title>ZSTD_compressBlock_doubleFast (1 samples, 0.84%)</title><rect x="1110.7" y="533" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1113.67" y="543.5" ></text>
</g>
<g >
<title>do_softirq (4 samples, 3.36%)</title><rect x="892.5" y="261" width="39.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="895.52" y="271.5" >do_..</text>
</g>
<g >
<title>process_backlog (4 samples, 3.36%)</title><rect x="892.5" y="197" width="39.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="895.52" y="207.5" >pro..</text>
</g>
<g >
<title>do_ssl3_write (2 samples, 1.68%)</title><rect x="436.4" y="597" width="19.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="439.39" y="607.5" ></text>
</g>
<g >
<title>kworker/1:1H (10 samples, 8.40%)</title><rect x="129.0" y="853" width="99.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="131.99" y="863.5" >kworker/1:1H</text>
</g>
<g >
<title>binlog_cache_data::flush(THD*, unsigned long long*, bool*) (2 samples, 1.68%)</title><rect x="1041.3" y="629" width="19.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1044.26" y="639.5" ></text>
</g>
<g >
<title>__jbd2_log_start_commit (1 samples, 0.84%)</title><rect x="1080.9" y="533" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1083.92" y="543.5" ></text>
</g>
<g >
<title>srv_purge_coordinator_thread() (2 samples, 1.68%)</title><rect x="714.0" y="805" width="19.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="717.03" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4 samples, 3.36%)</title><rect x="892.5" y="293" width="39.7" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="895.52" y="303.5" >ip_..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::write_cache(THD*, binlog_cache_data*, Binlog_event_writer*) (2 samples, 1.68%)</title><rect x="1041.3" y="597" width="19.8" height="15.0" fill="rgb(89,200,200)" rx="2" ry="2" />
<text  x="1044.26" y="607.5" ></text>
</g>
<g >
<title>blk_finish_plug (2 samples, 1.68%)</title><rect x="1061.1" y="485" width="19.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1064.09" y="495.5" ></text>
</g>
<g >
<title>net_write_packet(NET*, unsigned char const*, unsigned long) (2 samples, 1.68%)</title><rect x="436.4" y="693" width="19.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="439.39" y="703.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.84%)</title><rect x="803.3" y="725" width="9.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="806.28" y="735.5" ></text>
</g>
<g >
<title>vio_ssl_write(Vio*, unsigned char const*, unsigned long) (4 samples, 3.36%)</title><rect x="347.1" y="693" width="39.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="350.14" y="703.5" >vio..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.84%)</title><rect x="228.2" y="725" width="9.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="231.15" y="735.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.84%)</title><rect x="426.5" y="309" width="9.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="429.47" y="319.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.84%)</title><rect x="347.1" y="85" width="10.0" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="350.14" y="95.5" ></text>
</g>
<g >
<title>Sql_cmd_insert_base::prepare_inner(THD*) (1 samples, 0.84%)</title><rect x="952.0" y="693" width="9.9" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="955.02" y="703.5" ></text>
</g>
<g >
<title>wbt_issue (1 samples, 0.84%)</title><rect x="129.0" y="597" width="9.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="131.99" y="607.5" ></text>
</g>
<g >
<title>log_flusher(log_t*) (3 samples, 2.52%)</title><rect x="753.7" y="805" width="29.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="756.70" y="815.5" >lo..</text>
</g>
<g >
<title>BIO_write (4 samples, 3.36%)</title><rect x="347.1" y="581" width="39.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="350.14" y="591.5" >BIO..</text>
</g>
<g >
<title>init_functions(IO_CACHE*) (1 samples, 0.84%)</title><rect x="1051.2" y="533" width="9.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1054.18" y="543.5" ></text>
</g>
<g >
<title>setup_fields(THD*, unsigned long, bool, bool, bool, mem_root_deque&lt;Item*&gt; const*, mem_root_deque&lt;Item*&gt;*, Bounds_checked_array&lt;Item*&gt;) (1 samples, 0.84%)</title><rect x="952.0" y="661" width="9.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="955.02" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 2.52%)</title><rect x="902.4" y="53" width="29.8" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="905.44" y="63.5" >_r..</text>
</g>
<g >
<title>trx_commit_for_mysql(trx_t*) (3 samples, 2.52%)</title><rect x="991.7" y="597" width="29.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="994.68" y="607.5" >tr..</text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 1.68%)</title><rect x="347.1" y="373" width="19.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="350.14" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="714.0" y="757" width="9.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="717.03" y="767.5" ></text>
</g>
<g >
<title>blk_mq_start_request (1 samples, 0.84%)</title><rect x="138.9" y="629" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="141.91" y="639.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.84%)</title><rect x="813.2" y="565" width="9.9" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="816.19" y="575.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.84%)</title><rect x="813.2" y="613" width="9.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="816.19" y="623.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.84%)</title><rect x="406.6" y="309" width="10.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="409.64" y="319.5" ></text>
</g>
<g >
<title>tcp_sendmsg (5 samples, 4.20%)</title><rect x="892.5" y="389" width="49.6" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="895.52" y="399.5" >tcp_s..</text>
</g>
<g >
<title>Transaction_payload_log_event::write(Basic_ostream*) (1 samples, 0.84%)</title><rect x="1130.5" y="629" width="9.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="1133.50" y="639.5" ></text>
</g>
<g >
<title>vio_ssl_write(Vio*, unsigned char const*, unsigned long) (5 samples, 4.20%)</title><rect x="892.5" y="677" width="49.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="895.52" y="687.5" >vio_s..</text>
</g>
<g >
<title>bread_conv (3 samples, 2.52%)</title><rect x="406.6" y="517" width="29.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="409.64" y="527.5" >br..</text>
</g>
<g >
<title>ZSTD_flushStream (2 samples, 1.68%)</title><rect x="1110.7" y="629" width="19.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1113.67" y="639.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.84%)</title><rect x="704.1" y="837" width="9.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="707.12" y="847.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.84%)</title><rect x="406.6" y="293" width="10.0" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="409.64" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="803.3" y="757" width="9.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="806.28" y="767.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (2 samples, 1.68%)</title><rect x="753.7" y="533" width="19.8" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text  x="756.70" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_work (1 samples, 0.84%)</title><rect x="733.9" y="565" width="9.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="736.87" y="575.5" ></text>
</g>
<g >
<title>vio_socket_io_wait(Vio*, enum_vio_io_event) (1 samples, 0.84%)</title><rect x="872.7" y="677" width="9.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="875.69" y="687.5" ></text>
</g>
<g >
<title>net_read_packet(NET*, unsigned long*) (3 samples, 2.52%)</title><rect x="406.6" y="709" width="29.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="409.64" y="719.5" >ne..</text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (2 samples, 1.68%)</title><rect x="753.7" y="485" width="19.8" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="756.70" y="495.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="842.9" y="693" width="10.0" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="845.94" y="703.5" ></text>
</g>
<g >
<title>sock_read_iter (3 samples, 2.52%)</title><rect x="406.6" y="405" width="29.8" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="409.64" y="415.5" >so..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.84%)</title><rect x="426.5" y="245" width="9.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="429.47" y="255.5" ></text>
</g>
<g >
<title>HUF_writeCTable_wksp (1 samples, 0.84%)</title><rect x="1120.6" y="501" width="9.9" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="1123.59" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="733.9" y="597" width="9.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="736.87" y="607.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_internal (2 samples, 1.68%)</title><rect x="1110.7" y="565" width="19.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1113.67" y="575.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::process_commit_stage_queue(THD*, THD*) (3 samples, 2.52%)</title><rect x="991.7" y="661" width="29.7" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="994.68" y="671.5" >MY..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.84%)</title><rect x="981.8" y="517" width="9.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="984.76" y="527.5" ></text>
</g>
<g >
<title>SSL_write (2 samples, 1.68%)</title><rect x="436.4" y="661" width="19.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="439.39" y="671.5" ></text>
</g>
<g >
<title>innobase_flush_logs(handlerton*, bool) (2 samples, 1.68%)</title><rect x="1021.4" y="581" width="19.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1024.43" y="591.5" ></text>
</g>
<g >
<title>os_event::wait_time_low(std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long) (1 samples, 0.84%)</title><rect x="823.1" y="789" width="9.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="826.11" y="799.5" ></text>
</g>
<g >
<title>Fil_shard::do_redo_io(IORequest const&amp;, page_id_t const&amp;, page_size_t const&amp;, unsigned long, unsigned long, void*) (1 samples, 0.84%)</title><rect x="813.2" y="757" width="9.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="816.19" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="842.9" y="773" width="10.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="845.94" y="783.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (2 samples, 1.68%)</title><rect x="753.7" y="501" width="19.8" height="15.0" fill="rgb(72,186,186)" rx="2" ry="2" />
<text  x="756.70" y="511.5" ></text>
</g>
<g >
<title>wbt_issue (1 samples, 0.84%)</title><rect x="129.0" y="613" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="131.99" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.52%)</title><rect x="406.6" y="485" width="29.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="409.64" y="495.5" >en..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::commit(THD*, bool) (1 samples, 0.84%)</title><rect x="1180.1" y="693" width="9.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="1183.08" y="703.5" ></text>
</g>
<g >
<title>ZSTD_compressStream2 (2 samples, 1.68%)</title><rect x="1110.7" y="613" width="19.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1113.67" y="623.5" ></text>
</g>
<g >
<title>process_one_work (10 samples, 8.40%)</title><rect x="129.0" y="789" width="99.2" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="131.99" y="799.5" >process_one_..</text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.84%)</title><rect x="981.8" y="485" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="984.76" y="495.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.84%)</title><rect x="813.2" y="549" width="9.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="816.19" y="559.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::flush_and_set_pending_rows_event(THD*, Rows_log_event*, bool) (1 samples, 0.84%)</title><rect x="961.9" y="677" width="9.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="964.93" y="687.5" ></text>
</g>
<g >
<title>Buf_fetch_normal::get(buf_block_t*&amp;) (1 samples, 0.84%)</title><rect x="1001.6" y="517" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="1004.60" y="527.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.84%)</title><rect x="823.1" y="773" width="9.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="826.11" y="783.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.84%)</title><rect x="862.8" y="453" width="9.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="865.77" y="463.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (10 samples, 8.40%)</title><rect x="129.0" y="693" width="99.2" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="131.99" y="703.5" >__blk_mq_sch..</text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="1061.1" y="261" width="19.8" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="1064.09" y="271.5" ></text>
</g>
<g >
<title>tcp_recvmsg (3 samples, 2.52%)</title><rect x="406.6" y="373" width="29.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="409.64" y="383.5" >tc..</text>
</g>
<g >
<title>kthread (10 samples, 8.40%)</title><rect x="129.0" y="821" width="99.2" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="131.99" y="831.5" >kthread</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (3 samples, 2.52%)</title><rect x="29.8" y="693" width="29.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="32.83" y="703.5" >__..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::do_write_cache(Binlog_cache_storage*, Binlog_event_writer*) (2 samples, 1.68%)</title><rect x="1041.3" y="581" width="19.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1044.26" y="591.5" ></text>
</g>
<g >
<title>__GI___clock_nanosleep (1 samples, 0.84%)</title><rect x="714.0" y="789" width="9.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="717.03" y="799.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.84%)</title><rect x="932.2" y="357" width="9.9" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="935.18" y="367.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (5 samples, 4.20%)</title><rect x="892.5" y="373" width="49.6" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="895.52" y="383.5" >tcp_s..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.84%)</title><rect x="89.3" y="741" width="9.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="92.33" y="751.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.84%)</title><rect x="872.7" y="597" width="9.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="875.69" y="607.5" ></text>
</g>
<g >
<title>virtqueue_notify (2 samples, 1.68%)</title><rect x="753.7" y="421" width="19.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="756.70" y="431.5" ></text>
</g>
<g >
<title>ha_commit_low(THD*, bool, bool) (1 samples, 0.84%)</title><rect x="1180.1" y="677" width="9.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1183.08" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="862.8" y="485" width="9.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="865.77" y="495.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 1.68%)</title><rect x="436.4" y="357" width="19.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="439.39" y="367.5" ></text>
</g>
<g >
<title>IO_CACHE_binlog_cache_storage::begin(unsigned char**, unsigned long long*) (1 samples, 0.84%)</title><rect x="1051.2" y="549" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="1054.18" y="559.5" ></text>
</g>
<g >
<title>ha_flush_logs(bool) (2 samples, 1.68%)</title><rect x="1021.4" y="629" width="19.9" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1024.43" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 4.20%)</title><rect x="892.5" y="501" width="49.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="895.52" y="511.5" >entry..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 1.68%)</title><rect x="1061.1" y="533" width="19.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1064.09" y="543.5" ></text>
</g>
<g >
<title>Protocol_classic::get_command(COM_DATA*, enum_server_command*) (3 samples, 2.52%)</title><rect x="852.9" y="773" width="29.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="855.86" y="783.5" >Pr..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.84%)</title><rect x="416.6" y="309" width="9.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="419.55" y="319.5" ></text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (2 samples, 1.68%)</title><rect x="753.7" y="469" width="19.8" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="756.70" y="479.5" ></text>
</g>
<g >
<title>Sql_cmd_dml::execute(THD*) (2 samples, 1.68%)</title><rect x="952.0" y="725" width="19.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="955.02" y="735.5" ></text>
</g>
<g >
<title>handle_connection (34 samples, 28.57%)</title><rect x="852.9" y="805" width="337.1" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="855.86" y="815.5" >handle_connection</text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.84%)</title><rect x="376.9" y="373" width="9.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="379.89" y="383.5" ></text>
</g>
<g >
<title>kworker/u4:2 (1 samples, 0.84%)</title><rect x="228.2" y="853" width="9.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="231.15" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (3 samples, 2.52%)</title><rect x="644.6" y="693" width="29.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="647.62" y="703.5" >fi..</text>
</g>
<g >
<title>net_read_packet(NET*, unsigned long*) (3 samples, 2.52%)</title><rect x="852.9" y="725" width="29.7" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="855.86" y="735.5" >ne..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="813.2" y="677" width="9.9" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="816.19" y="687.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.84%)</title><rect x="842.9" y="741" width="10.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="845.94" y="751.5" ></text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (2 samples, 1.68%)</title><rect x="1061.1" y="357" width="19.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="1064.09" y="367.5" ></text>
</g>
<g >
<title>trx_undo_assign_undo(trx_t*, trx_undo_ptr_t*, unsigned long) (2 samples, 1.68%)</title><rect x="1001.6" y="565" width="19.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="1004.60" y="575.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (2 samples, 1.68%)</title><rect x="69.5" y="725" width="19.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="72.50" y="735.5" ></text>
</g>
<g >
<title>bwrite_conv (2 samples, 1.68%)</title><rect x="436.4" y="533" width="19.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="439.39" y="543.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.84%)</title><rect x="862.8" y="389" width="9.9" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="865.77" y="399.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.84%)</title><rect x="684.3" y="773" width="9.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="687.29" y="783.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.84%)</title><rect x="674.4" y="741" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="677.37" y="751.5" ></text>
</g>
<g >
<title>pfs_spawn_thread (34 samples, 28.57%)</title><rect x="852.9" y="821" width="337.1" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="855.86" y="831.5" >pfs_spawn_thread</text>
</g>
<g >
<title>LEX::new_top_level_query() (1 samples, 0.84%)</title><rect x="942.1" y="725" width="9.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="945.10" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 2.52%)</title><rect x="406.6" y="469" width="29.8" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="409.64" y="479.5" >do..</text>
</g>
<g >
<title>PyThreadState_Get (1 samples, 0.84%)</title><rect x="257.9" y="837" width="9.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="260.90" y="847.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.84%)</title><rect x="347.1" y="277" width="10.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="350.14" y="287.5" ></text>
</g>
<g >
<title>ssl3_write_pending (2 samples, 1.68%)</title><rect x="436.4" y="581" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="439.39" y="591.5" ></text>
</g>
<g >
<title>HUF_compress_internal (1 samples, 0.84%)</title><rect x="1120.6" y="517" width="9.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="1123.59" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="1080.9" y="485" width="9.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1083.92" y="495.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (3 samples, 2.52%)</title><rect x="29.8" y="725" width="29.8" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="32.83" y="735.5" >bl..</text>
</g>
<g >
<title>trx_undo_header_add_space_for_xid(unsigned char*, unsigned char*, mtr_t*, trx_undo_t::Gtid_storage) (1 samples, 0.84%)</title><rect x="1011.5" y="549" width="9.9" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="1014.51" y="559.5" ></text>
</g>
<g >
<title>sock_write_iter (4 samples, 3.36%)</title><rect x="347.1" y="437" width="39.7" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="350.14" y="447.5" >soc..</text>
</g>
<g >
<title>dispatch_command(THD*, COM_DATA const*, enum_server_command) (30 samples, 25.21%)</title><rect x="892.5" y="773" width="297.5" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="895.52" y="783.5" >dispatch_command(THD*, COM_DATA const*, ..</text>
</g>
<g >
<title>submit_bio_noacct (2 samples, 1.68%)</title><rect x="69.5" y="741" width="19.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="72.50" y="751.5" ></text>
</g>
<g >
<title>ha_commit_low(THD*, bool, bool) (1 samples, 0.84%)</title><rect x="733.9" y="677" width="9.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="736.87" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (1 samples, 0.84%)</title><rect x="813.2" y="661" width="9.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="816.19" y="671.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (1 samples, 0.84%)</title><rect x="228.2" y="709" width="9.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="231.15" y="719.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.84%)</title><rect x="347.1" y="325" width="10.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="350.14" y="335.5" ></text>
</g>
<g >
<title>Item_ident::walk(bool (Item::*)(unsigned char*), enum_walk, unsigned char*) (1 samples, 0.84%)</title><rect x="952.0" y="645" width="9.9" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="955.02" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 1.68%)</title><rect x="436.4" y="181" width="19.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="439.39" y="191.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.84%)</title><rect x="892.5" y="117" width="9.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="895.52" y="127.5" ></text>
</g>
<g >
<title>sock_write_iter (5 samples, 4.20%)</title><rect x="892.5" y="421" width="49.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="895.52" y="431.5" >sock_..</text>
</g>
<g >
<title>__tcp_push_pending_frames (4 samples, 3.36%)</title><rect x="892.5" y="357" width="39.7" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="895.52" y="367.5" >__t..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="1080.9" y="501" width="9.9" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1083.92" y="511.5" ></text>
</g>
<g >
<title>trx_undo_gtid_add_update_undo(trx_t*, bool, bool) (2 samples, 1.68%)</title><rect x="1001.6" y="581" width="19.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="1004.60" y="591.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 3.36%)</title><rect x="347.1" y="453" width="39.7" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="350.14" y="463.5" >new..</text>
</g>
<g >
<title>Fil_shard::redo_space_flush() (2 samples, 1.68%)</title><rect x="753.7" y="757" width="19.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="756.70" y="767.5" ></text>
</g>
<g >
<title>ZSTD_resetCCtx_internal (3 samples, 2.52%)</title><rect x="1150.3" y="549" width="29.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1153.34" y="559.5" >ZS..</text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 2.52%)</title><rect x="902.4" y="101" width="29.8" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="905.44" y="111.5" >tc..</text>
</g>
<g >
<title>bread_conv (1 samples, 0.84%)</title><rect x="862.8" y="533" width="9.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="865.77" y="543.5" ></text>
</g>
<g >
<title>MySQL_commit (5 samples, 4.20%)</title><rect x="406.6" y="805" width="49.6" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="409.64" y="815.5" >MySQL..</text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 1.68%)</title><rect x="436.4" y="69" width="19.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="439.39" y="79.5" ></text>
</g>
<g >
<title>tcp_sendmsg (4 samples, 3.36%)</title><rect x="347.1" y="405" width="39.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="350.14" y="415.5" >tcp..</text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 1.68%)</title><rect x="436.4" y="341" width="19.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="439.39" y="351.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.84%)</title><rect x="376.9" y="357" width="9.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="379.89" y="367.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (2 samples, 1.68%)</title><rect x="753.7" y="453" width="19.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="756.70" y="463.5" ></text>
</g>
<g >
<title>jbd2_get_transaction (1 samples, 0.84%)</title><rect x="813.2" y="469" width="9.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="816.19" y="479.5" ></text>
</g>
<g >
<title>check_insert_fields(THD*, TABLE_LIST*, mem_root_deque&lt;Item*&gt;*) (1 samples, 0.84%)</title><rect x="952.0" y="677" width="9.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="955.02" y="687.5" ></text>
</g>
<g >
<title>__jbd2_journal_temp_unlink_buffer (1 samples, 0.84%)</title><rect x="10.0" y="725" width="9.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.84%)</title><rect x="347.1" y="149" width="10.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="350.14" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.84%)</title><rect x="416.6" y="293" width="9.9" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="419.55" y="303.5" ></text>
</g>
<g >
<title>ext4_sync_file (2 samples, 1.68%)</title><rect x="753.7" y="677" width="19.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="756.70" y="687.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::fetch_and_process_flush_stage_queue(bool) (2 samples, 1.68%)</title><rect x="1021.4" y="645" width="19.9" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="1024.43" y="655.5" ></text>
</g>
<g >
<title>jbd2_get_transaction (1 samples, 0.84%)</title><rect x="813.2" y="485" width="9.9" height="15.0" fill="rgb(94,206,206)" rx="2" ry="2" />
<text  x="816.19" y="495.5" ></text>
</g>
<g >
<title>bio_write_intern (4 samples, 3.36%)</title><rect x="347.1" y="565" width="39.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="350.14" y="575.5" >bio..</text>
</g>
<g >
<title>rw_lock_x_lock_func(rw_lock_t*, unsigned long, ut::Location) (1 samples, 0.84%)</title><rect x="723.9" y="789" width="10.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="726.95" y="799.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.84%)</title><rect x="575.2" y="725" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="578.21" y="735.5" ></text>
</g>
<g >
<title>IO_CACHE_ostream::flush() (1 samples, 0.84%)</title><rect x="981.8" y="645" width="9.9" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="984.76" y="655.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8 samples, 6.72%)</title><rect x="466.1" y="837" width="79.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="469.13" y="847.5" >_PyEval_E..</text>
</g>
<g >
<title>ret_from_fork (10 samples, 8.40%)</title><rect x="129.0" y="837" width="99.2" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="131.99" y="847.5" >ret_from_fork</text>
</g>
<g >
<title>trans_commit_stmt(THD*, bool) (1 samples, 0.84%)</title><rect x="1180.1" y="725" width="9.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="1183.08" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 1.68%)</title><rect x="436.4" y="117" width="19.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="439.39" y="127.5" ></text>
</g>
<g >
<title>ha_commit_trans(THD*, bool, bool) (1 samples, 0.84%)</title><rect x="733.9" y="709" width="9.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="736.87" y="719.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (10 samples, 8.40%)</title><rect x="129.0" y="741" width="99.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="131.99" y="751.5" >__blk_mq_del..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.84%)</title><rect x="733.9" y="581" width="9.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="736.87" y="591.5" ></text>
</g>
<g >
<title>dispatch_sql_command(THD*, Parser_state*) (25 samples, 21.01%)</title><rect x="942.1" y="757" width="247.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="945.10" y="767.5" >dispatch_sql_command(THD*, Parser..</text>
</g>
<g >
<title>syscall_exit_work (1 samples, 0.84%)</title><rect x="714.0" y="709" width="9.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="717.03" y="719.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (3 samples, 2.52%)</title><rect x="29.8" y="677" width="29.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="32.83" y="687.5" >bl..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="842.9" y="789" width="10.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="845.94" y="799.5" ></text>
</g>
<g >
<title>binary_log::codecs::binary::Transaction_payload::encode(binary_log::Binary_log_event const&amp;, unsigned char*, unsigned long) const (1 samples, 0.84%)</title><rect x="1130.5" y="613" width="9.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="1133.50" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 3.36%)</title><rect x="347.1" y="517" width="39.7" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="350.14" y="527.5" >ent..</text>
</g>
<g >
<title>__GI___pthread_cond_broadcast (1 samples, 0.84%)</title><rect x="575.2" y="837" width="9.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="578.21" y="847.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 3.36%)</title><rect x="892.5" y="245" width="39.7" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="895.52" y="255.5" >__s..</text>
</g>
<g >
<title>os_event::wait_time_low(std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long) (1 samples, 0.84%)</title><rect x="773.5" y="789" width="9.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="776.53" y="799.5" ></text>
</g>
<g >
<title>bwrite_conv (4 samples, 3.36%)</title><rect x="347.1" y="549" width="39.7" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="350.14" y="559.5" >bwr..</text>
</g>
<g >
<title>futex_wake (1 samples, 0.84%)</title><rect x="575.2" y="757" width="9.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="578.21" y="767.5" ></text>
</g>
<g >
<title>ssl3_read (3 samples, 2.52%)</title><rect x="406.6" y="629" width="29.8" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="409.64" y="639.5" >ss..</text>
</g>
<g >
<title>ssl3_get_record (1 samples, 0.84%)</title><rect x="862.8" y="597" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="865.77" y="607.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::flush_thread_caches(THD*) (2 samples, 1.68%)</title><rect x="1041.3" y="645" width="19.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1044.26" y="655.5" ></text>
</g>
<g >
<title>mysql_commit (5 samples, 4.20%)</title><rect x="406.6" y="789" width="49.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="409.64" y="799.5" >mysql..</text>
</g>
<g >
<title>tcp_sendmsg_locked (4 samples, 3.36%)</title><rect x="347.1" y="389" width="39.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="350.14" y="399.5" >tcp..</text>
</g>
<g >
<title>Buf_fetch&lt;Buf_fetch_normal&gt;::lookup() (1 samples, 0.84%)</title><rect x="1001.6" y="501" width="9.9" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="1004.60" y="511.5" ></text>
</g>
<g >
<title>ssl3_write_pending (4 samples, 3.36%)</title><rect x="347.1" y="597" width="39.7" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="350.14" y="607.5" >ssl..</text>
</g>
<g >
<title>do_ssl3_write (5 samples, 4.20%)</title><rect x="892.5" y="597" width="49.6" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="895.52" y="607.5" >do_ss..</text>
</g>
<g >
<title>THD::binlog_query(THD::enum_binlog_query_type, char const*, unsigned long, bool, bool, bool, int) (1 samples, 0.84%)</title><rect x="961.9" y="693" width="9.9" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="964.93" y="703.5" ></text>
</g>
<g >
<title>net_write_packet(NET*, unsigned char const*, unsigned long) (4 samples, 3.36%)</title><rect x="347.1" y="709" width="39.7" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="350.14" y="719.5" >net..</text>
</g>
<g >
<title>crc_pcl (1 samples, 0.84%)</title><rect x="59.6" y="725" width="9.9" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="62.58" y="735.5" ></text>
</g>
<g >
<title>innobase_commit(handlerton*, THD*, bool) (1 samples, 0.84%)</title><rect x="733.9" y="661" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="736.87" y="671.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="842.9" y="709" width="10.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="845.94" y="719.5" ></text>
</g>
<g >
<title>syscall_exit_work (1 samples, 0.84%)</title><rect x="714.0" y="725" width="9.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="717.03" y="735.5" ></text>
</g>
<g >
<title>do_softirq (2 samples, 1.68%)</title><rect x="436.4" y="261" width="19.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="439.39" y="271.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.84%)</title><rect x="347.1" y="309" width="10.0" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="350.14" y="319.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::process_flush_stage_queue(unsigned long long*, bool*, THD**) (4 samples, 3.36%)</title><rect x="1021.4" y="661" width="39.7" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="1024.43" y="671.5" >MYS..</text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 1.68%)</title><rect x="436.4" y="389" width="19.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="439.39" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 6.72%)</title><rect x="614.9" y="821" width="79.3" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="617.87" y="831.5" >entry_SYS..</text>
</g>
<g >
<title>journal_submit_data_buffers (1 samples, 0.84%)</title><rect x="89.3" y="773" width="9.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="92.33" y="783.5" ></text>
</g>
<g >
<title>trx_commit(trx_t*) (1 samples, 0.84%)</title><rect x="991.7" y="581" width="9.9" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="994.68" y="591.5" ></text>
</g>
<g >
<title>ssl3_write_pending (5 samples, 4.20%)</title><rect x="892.5" y="581" width="49.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="895.52" y="591.5" >ssl3_..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="981.8" y="565" width="9.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="984.76" y="575.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.84%)</title><rect x="862.8" y="373" width="9.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="865.77" y="383.5" ></text>
</g>
<g >
<title>tcp_write_xmit (4 samples, 3.36%)</title><rect x="892.5" y="341" width="39.7" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="895.52" y="351.5" >tcp..</text>
</g>
<g >
<title>plugin_foreach_with_mask(THD*, bool (*)(THD*, st_plugin_int*, void*), int, unsigned int, void*) (2 samples, 1.68%)</title><rect x="1021.4" y="613" width="19.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1024.43" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 1.68%)</title><rect x="436.4" y="37" width="19.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="439.39" y="47.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (1 samples, 0.84%)</title><rect x="277.7" y="821" width="9.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="280.73" y="831.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (1 samples, 0.84%)</title><rect x="357.1" y="309" width="9.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="360.06" y="319.5" ></text>
</g>
<g >
<title>ssl3_read_internal (3 samples, 2.52%)</title><rect x="406.6" y="613" width="29.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="409.64" y="623.5" >ss..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.68%)</title><rect x="753.7" y="725" width="19.8" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="756.70" y="735.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.84%)</title><rect x="228.2" y="805" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="231.15" y="815.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.84%)</title><rect x="376.9" y="325" width="9.9" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="379.89" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="733.9" y="613" width="9.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="736.87" y="623.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 1.68%)</title><rect x="436.4" y="149" width="19.8" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="439.39" y="159.5" ></text>
</g>
<g >
<title>cli_advanced_command (2 samples, 1.68%)</title><rect x="436.4" y="741" width="19.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="439.39" y="751.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (1 samples, 0.84%)</title><rect x="228.2" y="693" width="9.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="231.15" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.84%)</title><rect x="297.6" y="805" width="9.9" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="300.56" y="815.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.84%)</title><rect x="575.2" y="773" width="9.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="578.21" y="783.5" ></text>
</g>
<g >
<title>virtqueue_notify (8 samples, 6.72%)</title><rect x="148.8" y="645" width="79.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="151.82" y="655.5" >virtqueue..</text>
</g>
<g >
<title>mysqld (63 samples, 52.94%)</title><rect x="565.3" y="853" width="624.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="568.29" y="863.5" >mysqld</text>
</g>
<g >
<title>SSL_write (4 samples, 3.36%)</title><rect x="347.1" y="677" width="39.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="350.14" y="687.5" >SSL..</text>
</g>
<g >
<title>ssl3_read (2 samples, 1.68%)</title><rect x="852.9" y="645" width="19.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="855.86" y="655.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.84%)</title><rect x="347.1" y="245" width="10.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="350.14" y="255.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (2 samples, 1.68%)</title><rect x="1061.1" y="389" width="19.8" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="1064.09" y="399.5" ></text>
</g>
<g >
<title>buf_page_get_gen(page_id_t const&amp;, page_size_t const&amp;, unsigned long, buf_block_t*, Page_fetch, ut::Location, mtr_t*, bool) (1 samples, 0.84%)</title><rect x="1001.6" y="549" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="1004.60" y="559.5" ></text>
</g>
<g >
<title>net_send_ok(THD*, unsigned int, unsigned int, unsigned long long, unsigned long long, char const*, bool) (5 samples, 4.20%)</title><rect x="892.5" y="725" width="49.6" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="895.52" y="735.5" >net_s..</text>
</g>
<g >
<title>__GI___pthread_cond_timedwait (1 samples, 0.84%)</title><rect x="565.3" y="821" width="9.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="568.29" y="831.5" ></text>
</g>
<g >
<title>Gtid_table_access_context::deinit(THD*, TABLE*, bool, bool) (1 samples, 0.84%)</title><rect x="733.9" y="741" width="9.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="736.87" y="751.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 1.68%)</title><rect x="347.1" y="341" width="19.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="350.14" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="29.8" y="597" width="9.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="32.83" y="607.5" ></text>
</g>
<g >
<title>inet_recvmsg (3 samples, 2.52%)</title><rect x="406.6" y="389" width="29.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="409.64" y="399.5" >in..</text>
</g>
<g >
<title>__napi_poll (2 samples, 1.68%)</title><rect x="436.4" y="213" width="19.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="439.39" y="223.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4 samples, 3.36%)</title><rect x="892.5" y="181" width="39.7" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="895.52" y="191.5" >__n..</text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 2.52%)</title><rect x="902.4" y="69" width="29.8" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="905.44" y="79.5" >__..</text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.84%)</title><rect x="842.9" y="757" width="10.0" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="845.94" y="767.5" ></text>
</g>
<g >
<title>SSL_write (5 samples, 4.20%)</title><rect x="892.5" y="661" width="49.6" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="895.52" y="671.5" >SSL_w..</text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 1.68%)</title><rect x="347.1" y="357" width="19.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="350.14" y="367.5" ></text>
</g>
<g >
<title>ha_commit_low(THD*, bool, bool) (3 samples, 2.52%)</title><rect x="991.7" y="645" width="29.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="994.68" y="655.5" >ha..</text>
</g>
<g >
<title>Protocol_classic::read_packet() (3 samples, 2.52%)</title><rect x="852.9" y="757" width="29.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="855.86" y="767.5" >Pr..</text>
</g>
<g >
<title>mysql_real_query (6 samples, 5.04%)</title><rect x="327.3" y="789" width="59.5" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="330.31" y="799.5" >mysql_..</text>
</g>
<g >
<title>syscall (1 samples, 0.84%)</title><rect x="842.9" y="805" width="10.0" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="845.94" y="815.5" ></text>
</g>
<g >
<title>bool stream_copy&lt;IO_CACHE_binlog_cache_storage, Basic_ostream&gt;(IO_CACHE_binlog_cache_storage*, Basic_ostream*, bool*) (2 samples, 1.68%)</title><rect x="1041.3" y="565" width="19.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1044.26" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="813.2" y="693" width="9.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="816.19" y="703.5" ></text>
</g>
<g >
<title>HIST_count_simple (1 samples, 0.84%)</title><rect x="1120.6" y="485" width="9.9" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="1123.59" y="495.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.84%)</title><rect x="981.8" y="549" width="9.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="984.76" y="559.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 5.04%)</title><rect x="624.8" y="757" width="59.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="627.79" y="767.5" >futex_..</text>
</g>
<g >
<title>BIO_read (1 samples, 0.84%)</title><rect x="862.8" y="565" width="9.9" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="865.77" y="575.5" ></text>
</g>
<g >
<title>Transaction_payload_log_event::write(Basic_ostream*) (1 samples, 0.84%)</title><rect x="1100.8" y="645" width="9.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1103.76" y="655.5" ></text>
</g>
<g >
<title>binary_log::transaction::compression::Zstd_comp::compress(unsigned char const*, unsigned long) (3 samples, 2.52%)</title><rect x="1150.3" y="613" width="29.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1153.34" y="623.5" >bi..</text>
</g>
<g >
<title>__x64_sys_fdatasync (3 samples, 2.52%)</title><rect x="1061.1" y="581" width="29.7" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1064.09" y="591.5" >__..</text>
</g>
<g >
<title>mysql_real_query (5 samples, 4.20%)</title><rect x="406.6" y="773" width="49.6" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="409.64" y="783.5" >mysql..</text>
</g>
<g >
<title>Buf_fetch&lt;Buf_fetch_normal&gt;::single_page() (1 samples, 0.84%)</title><rect x="1001.6" y="533" width="9.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1004.60" y="543.5" ></text>
</g>
<g >
<title>kthread (12 samples, 10.08%)</title><rect x="10.0" y="821" width="119.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >kthread</text>
</g>
<g >
<title>do_syscall_64 (8 samples, 6.72%)</title><rect x="614.9" y="805" width="79.3" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="617.87" y="815.5" >do_syscal..</text>
</g>
<g >
<title>ssl3_write (2 samples, 1.68%)</title><rect x="436.4" y="629" width="19.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="439.39" y="639.5" ></text>
</g>
<g >
<title>blk_finish_plug (3 samples, 2.52%)</title><rect x="29.8" y="773" width="29.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="32.83" y="783.5" >bl..</text>
</g>
<g >
<title>__jbd2_journal_unfile_buffer (1 samples, 0.84%)</title><rect x="10.0" y="757" width="9.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>blk_flush_plug (2 samples, 1.68%)</title><rect x="753.7" y="581" width="19.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="756.70" y="591.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 1.68%)</title><rect x="436.4" y="197" width="19.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="439.39" y="207.5" ></text>
</g>
<g >
<title>__write (4 samples, 3.36%)</title><rect x="347.1" y="533" width="39.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="350.14" y="543.5" >__w..</text>
</g>
<g >
<title>iowrite16 (8 samples, 6.72%)</title><rect x="148.8" y="597" width="79.4" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="151.82" y="607.5" >iowrite16</text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="684.3" y="725" width="9.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="687.29" y="735.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::write_transaction(THD*, binlog_cache_data*, Binlog_event_writer*) (2 samples, 1.68%)</title><rect x="1041.3" y="613" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1044.26" y="623.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (3 samples, 2.52%)</title><rect x="29.8" y="709" width="29.8" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="32.83" y="719.5" >__..</text>
</g>
<g >
<title>BIO_write (2 samples, 1.68%)</title><rect x="436.4" y="565" width="19.8" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="439.39" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="862.8" y="501" width="9.9" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="865.77" y="511.5" ></text>
</g>
<g >
<title>Item_field::check_column_privileges(unsigned char*) (1 samples, 0.84%)</title><rect x="952.0" y="629" width="9.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="955.02" y="639.5" ></text>
</g>
<g >
<title>jbd2/vda1-8 (12 samples, 10.08%)</title><rect x="10.0" y="853" width="119.0" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >jbd2/vda1-8</text>
</g>
<g >
<title>trx_commit_low(trx_t*, mtr_t*) (1 samples, 0.84%)</title><rect x="991.7" y="565" width="9.9" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="994.68" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="803.3" y="773" width="9.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="806.28" y="783.5" ></text>
</g>
<g >
<title>method_vectorcall_NOARGS (5 samples, 4.20%)</title><rect x="406.6" y="821" width="49.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="409.64" y="831.5" >metho..</text>
</g>
<g >
<title>bio_write_intern (5 samples, 4.20%)</title><rect x="892.5" y="549" width="49.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="895.52" y="559.5" >bio_w..</text>
</g>
<g >
<title>__x64_sys_fsync (2 samples, 1.68%)</title><rect x="753.7" y="693" width="19.8" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="756.70" y="703.5" ></text>
</g>
<g >
<title>ssl3_write_bytes (2 samples, 1.68%)</title><rect x="436.4" y="613" width="19.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="439.39" y="623.5" ></text>
</g>
<g >
<title>ssl3_read_n (1 samples, 0.84%)</title><rect x="862.8" y="581" width="9.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="865.77" y="591.5" ></text>
</g>
<g >
<title>ext4_convert_unwritten_extents (1 samples, 0.84%)</title><rect x="228.2" y="741" width="9.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="231.15" y="751.5" ></text>
</g>
<g >
<title>vio_ssl_read(Vio*, unsigned char*, unsigned long) (3 samples, 2.52%)</title><rect x="406.6" y="677" width="29.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="409.64" y="687.5" >vi..</text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 3.36%)</title><rect x="892.5" y="133" width="39.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="895.52" y="143.5" >tcp..</text>
</g>
<g >
<title>do_command(THD*) (34 samples, 28.57%)</title><rect x="852.9" y="789" width="337.1" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="855.86" y="799.5" >do_command(THD*)</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void (*)()&gt; &gt; &gt;::_M_run() (2 samples, 1.68%)</title><rect x="714.0" y="821" width="19.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="717.03" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.68%)</title><rect x="436.4" y="485" width="19.8" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="439.39" y="495.5" ></text>
</g>
<g >
<title>net_flush(NET*) (2 samples, 1.68%)</title><rect x="436.4" y="709" width="19.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="439.39" y="719.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 2.52%)</title><rect x="902.4" y="85" width="29.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="905.44" y="95.5" >so..</text>
</g>
<g >
<title>frame_dealloc (1 samples, 0.84%)</title><rect x="386.8" y="821" width="9.9" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="389.81" y="831.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 1.68%)</title><rect x="436.4" y="469" width="19.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="439.39" y="479.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 4.20%)</title><rect x="624.8" y="741" width="49.6" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="627.79" y="751.5" >futex..</text>
</g>
<g >
<title>ssl_write_internal (2 samples, 1.68%)</title><rect x="436.4" y="645" width="19.8" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="439.39" y="655.5" ></text>
</g>
<g >
<title>mempool_alloc (1 samples, 0.84%)</title><rect x="109.2" y="725" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="112.16" y="735.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqStore (1 samples, 0.84%)</title><rect x="1110.7" y="549" width="9.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="1113.67" y="559.5" ></text>
</g>
<g >
<title>_Py_dg_dtoa (1 samples, 0.84%)</title><rect x="297.6" y="789" width="9.9" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="300.56" y="799.5" ></text>
</g>
<g >
<title>ext4_end_io_rsv_work (1 samples, 0.84%)</title><rect x="228.2" y="773" width="9.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="231.15" y="783.5" ></text>
</g>
<g >
<title>ext4_convert_unwritten_io_end_vec (1 samples, 0.84%)</title><rect x="228.2" y="757" width="9.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="231.15" y="767.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 1.68%)</title><rect x="436.4" y="453" width="19.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="439.39" y="463.5" ></text>
</g>
<g >
<title>Clone_persist_gtid::write_to_table(unsigned long, Gtid_set&amp;, Sid_map&amp;) (2 samples, 1.68%)</title><rect x="733.9" y="773" width="19.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="736.87" y="783.5" ></text>
</g>
<g >
<title>new_sync_write (5 samples, 4.20%)</title><rect x="892.5" y="437" width="49.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="895.52" y="447.5" >new_s..</text>
</g>
<g >
<title>__schedule (3 samples, 2.52%)</title><rect x="644.6" y="709" width="29.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="647.62" y="719.5" >__..</text>
</g>
<g >
<title>sock_sendmsg (5 samples, 4.20%)</title><rect x="892.5" y="405" width="49.6" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="895.52" y="415.5" >sock_..</text>
</g>
<g >
<title>ksys_read (1 samples, 0.84%)</title><rect x="862.8" y="469" width="9.9" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="865.77" y="479.5" ></text>
</g>
<g >
<title>virtio_queue_rq (2 samples, 1.68%)</title><rect x="753.7" y="437" width="19.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="756.70" y="447.5" ></text>
</g>
<g >
<title>wait_woken (1 samples, 0.84%)</title><rect x="426.5" y="325" width="9.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="429.47" y="335.5" ></text>
</g>
<g >
<title>__write (2 samples, 1.68%)</title><rect x="436.4" y="517" width="19.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="439.39" y="527.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 2.52%)</title><rect x="1150.3" y="533" width="29.8" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="1153.34" y="543.5" >__..</text>
</g>
<g >
<title>inet6_recvmsg (1 samples, 0.84%)</title><rect x="862.8" y="405" width="9.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="865.77" y="415.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (1 samples, 0.84%)</title><rect x="228.2" y="661" width="9.9" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="231.15" y="671.5" ></text>
</g>
<g >
<title>crc_pcl (1 samples, 0.84%)</title><rect x="59.6" y="741" width="9.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="62.58" y="751.5" ></text>
</g>
<g >
<title>path_put (1 samples, 0.84%)</title><rect x="733.9" y="517" width="9.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="736.87" y="527.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.84%)</title><rect x="59.6" y="757" width="9.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="62.58" y="767.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.84%)</title><rect x="813.2" y="645" width="9.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="816.19" y="655.5" ></text>
</g>
<g >
<title>__wait_on_bit (1 samples, 0.84%)</title><rect x="99.2" y="757" width="10.0" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="102.24" y="767.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 16.81%)</title><rect x="267.8" y="837" width="198.3" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="270.82" y="847.5" >[unknown]</text>
</g>
<g >
<title>iowrite16 (8 samples, 6.72%)</title><rect x="148.8" y="613" width="79.4" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="151.82" y="623.5" >iowrite16</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 1.68%)</title><rect x="624.8" y="725" width="19.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="627.79" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="575.2" y="693" width="9.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="578.21" y="703.5" ></text>
</g>
<g >
<title>ZSTD_compressContinue (2 samples, 1.68%)</title><rect x="1110.7" y="597" width="19.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1113.67" y="607.5" ></text>
</g>
<g >
<title>bio_read_intern (3 samples, 2.52%)</title><rect x="406.6" y="533" width="29.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="409.64" y="543.5" >bi..</text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (2 samples, 1.68%)</title><rect x="1061.1" y="421" width="19.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="1064.09" y="431.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 2.52%)</title><rect x="406.6" y="453" width="29.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="409.64" y="463.5" >ks..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.84%)</title><rect x="347.1" y="165" width="10.0" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="350.14" y="175.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (2 samples, 1.68%)</title><rect x="753.7" y="517" width="19.8" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="756.70" y="527.5" ></text>
</g>
<g >
<title>cli_advanced_command (6 samples, 5.04%)</title><rect x="327.3" y="757" width="59.5" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="330.31" y="767.5" >cli_ad..</text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.84%)</title><rect x="872.7" y="581" width="9.9" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="875.69" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="575.2" y="805" width="9.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="578.21" y="815.5" ></text>
</g>
<g >
<title>LEX::new_query(Query_block*) (1 samples, 0.84%)</title><rect x="942.1" y="709" width="9.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="945.10" y="719.5" ></text>
</g>
<g >
<title>Sql_cmd_dml::prepare(THD*) (1 samples, 0.84%)</title><rect x="952.0" y="709" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="955.02" y="719.5" ></text>
</g>
<g >
<title>inline_mysql_mutex_lock(mysql_mutex_t*, char const*, unsigned int) (1 samples, 0.84%)</title><rect x="1090.8" y="661" width="10.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1093.84" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 4.20%)</title><rect x="892.5" y="485" width="49.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="895.52" y="495.5" >do_sy..</text>
</g>
<g >
<title>PyNumber_Subtract (1 samples, 0.84%)</title><rect x="267.8" y="821" width="9.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="270.82" y="831.5" ></text>
</g>
<g >
<title>lex_start(THD*) (1 samples, 0.84%)</title><rect x="942.1" y="741" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="945.10" y="751.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (3 samples, 2.52%)</title><rect x="406.6" y="357" width="29.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="409.64" y="367.5" >tc..</text>
</g>
<g >
<title>mysql_send_query (2 samples, 1.68%)</title><rect x="436.4" y="757" width="19.8" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="439.39" y="767.5" ></text>
</g>
<g >
<title>_PyTrash_cond (1 samples, 0.84%)</title><rect x="317.4" y="821" width="9.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="320.39" y="831.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 1.68%)</title><rect x="1061.1" y="501" width="19.8" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="1064.09" y="511.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (1 samples, 0.84%)</title><rect x="238.1" y="837" width="9.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="241.07" y="847.5" ></text>
</g>
<g >
<title>__jbd2_journal_temp_unlink_buffer (1 samples, 0.84%)</title><rect x="10.0" y="741" width="9.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 1.68%)</title><rect x="624.8" y="709" width="19.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="627.79" y="719.5" ></text>
</g>
<g >
<title>ssl3_read_bytes (3 samples, 2.52%)</title><rect x="406.6" y="597" width="29.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="409.64" y="607.5" >ss..</text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (10 samples, 8.40%)</title><rect x="129.0" y="677" width="99.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="131.99" y="687.5" >blk_mq_dispa..</text>
</g>
<g >
<title>__ext4_journal_start_sb (1 samples, 0.84%)</title><rect x="813.2" y="533" width="9.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="816.19" y="543.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.84%)</title><rect x="416.6" y="325" width="9.9" height="15.0" fill="rgb(99,209,209)" rx="2" ry="2" />
<text  x="419.55" y="335.5" ></text>
</g>
<g >
<title>net_read_raw_loop(NET*, unsigned long) (3 samples, 2.52%)</title><rect x="406.6" y="693" width="29.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="409.64" y="703.5" >ne..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.84%)</title><rect x="347.1" y="261" width="10.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="350.14" y="271.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (2 samples, 1.68%)</title><rect x="1061.1" y="373" width="19.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="1064.09" y="383.5" ></text>
</g>
<g >
<title>BIO_read (3 samples, 2.52%)</title><rect x="406.6" y="549" width="29.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="409.64" y="559.5" >BI..</text>
</g>
<g >
<title>sock_write_iter (2 samples, 1.68%)</title><rect x="436.4" y="421" width="19.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="439.39" y="431.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (1 samples, 0.84%)</title><rect x="228.2" y="677" width="9.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="231.15" y="687.5" ></text>
</g>
<g >
<title>blk_flush_plug (2 samples, 1.68%)</title><rect x="1061.1" y="469" width="19.8" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="1064.09" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="19.9" y="757" width="9.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="22.92" y="767.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::flush_cache_to_file(unsigned long long*) (1 samples, 0.84%)</title><rect x="981.8" y="661" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="984.76" y="671.5" ></text>
</g>
<g >
<title>blk_mq_start_request (2 samples, 1.68%)</title><rect x="129.0" y="645" width="19.8" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="131.99" y="655.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 2.52%)</title><rect x="406.6" y="437" width="29.8" height="15.0" fill="rgb(101,211,211)" rx="2" ry="2" />
<text  x="409.64" y="447.5" >vf..</text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 3.36%)</title><rect x="892.5" y="277" width="39.7" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="895.52" y="287.5" >__l..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="575.2" y="709" width="9.9" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="578.21" y="719.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 1.68%)</title><rect x="436.4" y="437" width="19.8" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="439.39" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.84%)</title><rect x="882.6" y="773" width="9.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="885.61" y="783.5" ></text>
</g>
<g >
<title>virtio_queue_rq (3 samples, 2.52%)</title><rect x="29.8" y="613" width="29.8" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="32.83" y="623.5" >vi..</text>
</g>
<g >
<title>bio_write_intern (2 samples, 1.68%)</title><rect x="436.4" y="549" width="19.8" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="439.39" y="559.5" ></text>
</g>
<g >
<title>ssl3_write_bytes (5 samples, 4.20%)</title><rect x="892.5" y="613" width="49.6" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="895.52" y="623.5" >ssl3_..</text>
</g>
<g >
<title>Clone_persist_gtid::flush_gtids(THD*) (2 samples, 1.68%)</title><rect x="733.9" y="789" width="19.8" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="736.87" y="799.5" ></text>
</g>
<g >
<title>ssl_write_internal (5 samples, 4.20%)</title><rect x="892.5" y="645" width="49.6" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="895.52" y="655.5" >ssl_w..</text>
</g>
<g >
<title>mysql_execute_command(THD*, bool) (24 samples, 20.17%)</title><rect x="952.0" y="741" width="238.0" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="955.02" y="751.5" >mysql_execute_command(THD*, bool)</text>
</g>
<g >
<title>bio_alloc_bioset (1 samples, 0.84%)</title><rect x="109.2" y="757" width="9.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="112.16" y="767.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (1 samples, 0.84%)</title><rect x="357.1" y="325" width="9.9" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="360.06" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.84%)</title><rect x="565.3" y="837" width="9.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="568.29" y="847.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::ordered_commit(THD*, bool, bool) (12 samples, 10.08%)</title><rect x="981.8" y="677" width="119.0" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="984.76" y="687.5" >MYSQL_BIN_LOG:..</text>
</g>
<g >
<title>ssl3_write (4 samples, 3.36%)</title><rect x="347.1" y="645" width="39.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="350.14" y="655.5" >ssl..</text>
</g>
<g >
<title>lock_trx_release_locks(trx_t*) (1 samples, 0.84%)</title><rect x="991.7" y="533" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="994.68" y="543.5" ></text>
</g>
<g >
<title>vfs_write (4 samples, 3.36%)</title><rect x="347.1" y="469" width="39.7" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="350.14" y="479.5" >vfs..</text>
</g>
<g >
<title>binary_log::transaction::compression::Base_compressor_decompressor::capacity() (1 samples, 0.84%)</title><rect x="1140.4" y="613" width="9.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="1143.42" y="623.5" ></text>
</g>
<g >
<title>Gtid_table_persistor::save(Gtid_set const*, bool) (2 samples, 1.68%)</title><rect x="733.9" y="757" width="19.8" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="736.87" y="767.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 1.68%)</title><rect x="436.4" y="405" width="19.8" height="15.0" fill="rgb(95,207,207)" rx="2" ry="2" />
<text  x="439.39" y="415.5" ></text>
</g>
<g >
<title>virtqueue_notify (2 samples, 1.68%)</title><rect x="39.7" y="597" width="19.9" height="15.0" fill="rgb(53,167,167)" rx="2" ry="2" />
<text  x="42.75" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.84%)</title><rect x="297.6" y="821" width="9.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="300.56" y="831.5" ></text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="753.7" y="373" width="19.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="756.70" y="383.5" ></text>
</g>
<g >
<title>vp_notify (2 samples, 1.68%)</title><rect x="753.7" y="405" width="19.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="756.70" y="415.5" ></text>
</g>
<g >
<title>ssl3_write (5 samples, 4.20%)</title><rect x="892.5" y="629" width="49.6" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="895.52" y="639.5" >ssl3_..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.84%)</title><rect x="89.3" y="757" width="9.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="92.33" y="767.5" ></text>
</g>
<g >
<title>do_ssl3_write (4 samples, 3.36%)</title><rect x="347.1" y="613" width="39.7" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="350.14" y="623.5" >do_..</text>
</g>
<g >
<title>Fil_shard::flush_file_redo() (2 samples, 1.68%)</title><rect x="753.7" y="773" width="19.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="756.70" y="783.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.84%)</title><rect x="803.3" y="741" width="9.9" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="806.28" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 1.68%)</title><rect x="436.4" y="245" width="19.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="439.39" y="255.5" ></text>
</g>
<g >
<title>ZSTD_compressContinue_internal (2 samples, 1.68%)</title><rect x="1110.7" y="581" width="19.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1113.67" y="591.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queues (10 samples, 8.40%)</title><rect x="129.0" y="757" width="99.2" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="131.99" y="767.5" >blk_mq_run_h..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.84%)</title><rect x="813.2" y="629" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="816.19" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 3.36%)</title><rect x="347.1" y="501" width="39.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="350.14" y="511.5" >do_..</text>
</g>
<g >
<title>kjournald2 (12 samples, 10.08%)</title><rect x="10.0" y="805" width="119.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >kjournald2</text>
</g>
<g >
<title>__futex_abstimed_wait_common (11 samples, 9.24%)</title><rect x="585.1" y="837" width="109.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="588.13" y="847.5" >__futex_absti..</text>
</g>
<g >
<title>my_b_flush_io_cache(IO_CACHE*, int) (1 samples, 0.84%)</title><rect x="981.8" y="629" width="9.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="984.76" y="639.5" ></text>
</g>
<g >
<title>SSL_read (3 samples, 2.52%)</title><rect x="406.6" y="661" width="29.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="409.64" y="671.5" >SS..</text>
</g>
<g >
<title>virtio_queue_rq (2 samples, 1.68%)</title><rect x="1061.1" y="325" width="19.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="1064.09" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.84%)</title><rect x="228.2" y="645" width="9.9" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="231.15" y="655.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 1.68%)</title><rect x="436.4" y="85" width="19.8" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="439.39" y="95.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.84%)</title><rect x="614.9" y="757" width="9.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="617.87" y="767.5" ></text>
</g>
<g >
<title>innobase_commit_low(trx_t*) (1 samples, 0.84%)</title><rect x="733.9" y="645" width="9.9" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="736.87" y="655.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (2 samples, 1.68%)</title><rect x="753.7" y="549" width="19.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="756.70" y="559.5" ></text>
</g>
<g >
<title>jbd2__journal_start (1 samples, 0.84%)</title><rect x="813.2" y="517" width="9.9" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="816.19" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.68%)</title><rect x="436.4" y="501" width="19.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="439.39" y="511.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_O (1 samples, 0.84%)</title><rect x="555.4" y="837" width="9.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="558.38" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1 samples, 0.84%)</title><rect x="307.5" y="821" width="9.9" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="310.48" y="831.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (2 samples, 1.68%)</title><rect x="1061.1" y="437" width="19.8" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1064.09" y="447.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.84%)</title><rect x="347.1" y="117" width="10.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="350.14" y="127.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.84%)</title><rect x="674.4" y="709" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="677.37" y="719.5" ></text>
</g>
<g >
<title>blk_finish_plug (2 samples, 1.68%)</title><rect x="753.7" y="597" width="19.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="756.70" y="607.5" ></text>
</g>
<g >
<title>mtls-auto-fill (33 samples, 27.73%)</title><rect x="238.1" y="853" width="327.2" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="241.07" y="863.5" >mtls-auto-fill</text>
</g>
<g >
<title>ext4_sync_file (3 samples, 2.52%)</title><rect x="1061.1" y="565" width="29.7" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1064.09" y="575.5" >ex..</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (2 samples, 1.68%)</title><rect x="1061.1" y="405" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1064.09" y="415.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (14 samples, 11.76%)</title><rect x="714.0" y="837" width="138.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="717.03" y="847.5" >execute_native_th..</text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.84%)</title><rect x="862.8" y="341" width="9.9" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="865.77" y="351.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (2 samples, 1.68%)</title><rect x="1061.1" y="549" width="19.8" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="1064.09" y="559.5" ></text>
</g>
<g >
<title>jbd2_complete_transaction (1 samples, 0.84%)</title><rect x="1080.9" y="549" width="9.9" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="1083.92" y="559.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::commit(THD*, bool) (21 samples, 17.65%)</title><rect x="971.8" y="693" width="208.3" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="974.85" y="703.5" >MYSQL_BIN_LOG::commit(THD*,..</text>
</g>
<g >
<title>cfunction_call (6 samples, 5.04%)</title><rect x="327.3" y="821" width="59.5" height="15.0" fill="rgb(92,204,204)" rx="2" ry="2" />
<text  x="330.31" y="831.5" >cfunct..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.84%)</title><rect x="793.4" y="789" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="796.36" y="799.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.84%)</title><rect x="545.5" y="837" width="9.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="548.46" y="847.5" ></text>
</g>
<g >
<title>ZSTD_compressStream2 (3 samples, 2.52%)</title><rect x="1150.3" y="597" width="29.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1153.34" y="607.5" >ZS..</text>
</g>
<g >
<title>jbd2_journal_commit_transaction (11 samples, 9.24%)</title><rect x="10.0" y="789" width="109.1" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >jbd2_journal_..</text>
</g>
<g >
<title>vio_ssl_write(Vio*, unsigned char const*, unsigned long) (2 samples, 1.68%)</title><rect x="436.4" y="677" width="19.8" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="439.39" y="687.5" ></text>
</g>
<g >
<title>net_write_command(NET*, unsigned char, unsigned char const*, unsigned long, unsigned char const*, unsigned long) (4 samples, 3.36%)</title><rect x="347.1" y="741" width="39.7" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="350.14" y="751.5" >net..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.84%)</title><rect x="862.8" y="357" width="9.9" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="865.77" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="981.8" y="581" width="9.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="984.76" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.84%)</title><rect x="575.2" y="789" width="9.9" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="578.21" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 2.52%)</title><rect x="902.4" y="37" width="29.8" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="905.44" y="47.5" >_r..</text>
</g>
<g >
<title>ZSTD_compressBegin_internal (3 samples, 2.52%)</title><rect x="1150.3" y="565" width="29.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1153.34" y="575.5" >ZS..</text>
</g>
<g >
<title>__rq_qos_track (1 samples, 0.84%)</title><rect x="69.5" y="693" width="9.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="72.50" y="703.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 1.68%)</title><rect x="436.4" y="229" width="19.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="439.39" y="239.5" ></text>
</g>
<g >
<title>ksys_write (5 samples, 4.20%)</title><rect x="892.5" y="469" width="49.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="895.52" y="479.5" >ksys_..</text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (2 samples, 1.68%)</title><rect x="1061.1" y="341" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1064.09" y="351.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (3 samples, 2.52%)</title><rect x="29.8" y="661" width="29.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="32.83" y="671.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.84%)</title><rect x="872.7" y="629" width="9.9" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="875.69" y="639.5" ></text>
</g>
<g >
<title>BIO_write (5 samples, 4.20%)</title><rect x="892.5" y="565" width="49.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="895.52" y="575.5" >BIO_w..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.84%)</title><rect x="228.2" y="837" width="9.9" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="231.15" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (1 samples, 0.84%)</title><rect x="79.4" y="709" width="9.9" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text  x="82.41" y="719.5" ></text>
</g>
<g >
<title>THD::send_statement_status() (5 samples, 4.20%)</title><rect x="892.5" y="757" width="49.6" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="895.52" y="767.5" >THD::..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="575.2" y="821" width="9.9" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="578.21" y="831.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.84%)</title><rect x="426.5" y="293" width="9.9" height="15.0" fill="rgb(51,165,165)" rx="2" ry="2" />
<text  x="429.47" y="303.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (10 samples, 8.40%)</title><rect x="129.0" y="709" width="99.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="131.99" y="719.5" >blk_mq_sched..</text>
</g>
<g >
<title>__ip_queue_xmit (4 samples, 3.36%)</title><rect x="892.5" y="309" width="39.7" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="895.52" y="319.5" >__i..</text>
</g>
<g >
<title>__write (1 samples, 0.84%)</title><rect x="981.8" y="597" width="9.9" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text  x="984.76" y="607.5" ></text>
</g>
<g >
<title>proxy_getattr (1 samples, 0.84%)</title><rect x="456.2" y="821" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="459.22" y="831.5" ></text>
</g>
<g >
<title>bool stream_copy&lt;IO_CACHE_binlog_cache_storage, Basic_ostream&gt;(IO_CACHE_binlog_cache_storage*, Basic_ostream*, bool*) (4 samples, 3.36%)</title><rect x="1140.4" y="645" width="39.7" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="1143.42" y="655.5" >boo..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="99.2" y="725" width="10.0" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="102.24" y="735.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1 samples, 0.84%)</title><rect x="228.2" y="629" width="9.9" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="231.15" y="639.5" ></text>
</g>
<g >
<title>MYSQL_BIN_LOG::sync_binlog_file(bool) (3 samples, 2.52%)</title><rect x="1061.1" y="661" width="29.7" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="1064.09" y="671.5" >MY..</text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="753.7" y="389" width="19.8" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="756.70" y="399.5" ></text>
</g>
<g >
<title>ksys_write (4 samples, 3.36%)</title><rect x="347.1" y="485" width="39.7" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="350.14" y="495.5" >ksy..</text>
</g>
<g >
<title>ssl3_write_bytes (4 samples, 3.36%)</title><rect x="347.1" y="629" width="39.7" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="350.14" y="639.5" >ssl..</text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 1.68%)</title><rect x="436.4" y="325" width="19.8" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="439.39" y="335.5" ></text>
</g>
<g >
<title>ha_commit_trans(THD*, bool, bool) (1 samples, 0.84%)</title><rect x="1180.1" y="709" width="9.9" height="15.0" fill="rgb(96,208,208)" rx="2" ry="2" />
<text  x="1183.08" y="719.5" ></text>
</g>
<g >
<title>out_of_line_wait_on_bit (1 samples, 0.84%)</title><rect x="99.2" y="773" width="10.0" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="102.24" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8 samples, 6.72%)</title><rect x="614.9" y="789" width="79.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="617.87" y="799.5" >__x64_sys..</text>
</g>
<g >
<title>net_flush(NET*) (5 samples, 4.20%)</title><rect x="892.5" y="709" width="49.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="895.52" y="719.5" >net_f..</text>
</g>
<g >
<title>ha_commit_trans(THD*, bool, bool) (21 samples, 17.65%)</title><rect x="971.8" y="709" width="208.3" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="974.85" y="719.5" >ha_commit_trans(THD*, bool,..</text>
</g>
<g >
<title>fdatasync (3 samples, 2.52%)</title><rect x="1061.1" y="629" width="29.7" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1064.09" y="639.5" >fd..</text>
</g>
<g >
<title>SSL_read (2 samples, 1.68%)</title><rect x="852.9" y="677" width="19.8" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="855.86" y="687.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.84%)</title><rect x="862.8" y="325" width="9.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="865.77" y="335.5" ></text>
</g>
<g >
<title>net_flush(NET*) (1 samples, 0.84%)</title><rect x="337.2" y="741" width="9.9" height="15.0" fill="rgb(102,212,212)" rx="2" ry="2" />
<text  x="340.23" y="751.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.84%)</title><rect x="813.2" y="501" width="9.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="816.19" y="511.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.84%)</title><rect x="367.0" y="357" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="369.97" y="367.5" ></text>
</g>
<g >
<title>net_flush(NET*) (4 samples, 3.36%)</title><rect x="347.1" y="725" width="39.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="350.14" y="735.5" >net..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 1.68%)</title><rect x="753.7" y="645" width="19.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="756.70" y="655.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.84%)</title><rect x="228.2" y="821" width="9.9" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="231.15" y="831.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2 samples, 1.68%)</title><rect x="436.4" y="309" width="19.8" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="439.39" y="319.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.84%)</title><rect x="842.9" y="725" width="10.0" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="845.94" y="735.5" ></text>
</g>
<g >
<title>vio_ssl_read(Vio*, unsigned char*, unsigned long) (3 samples, 2.52%)</title><rect x="852.9" y="693" width="29.7" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="855.86" y="703.5" >vi..</text>
</g>
<g >
<title>binlog_cache_data::compress(THD*) (8 samples, 6.72%)</title><rect x="1100.8" y="661" width="79.3" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="1103.76" y="671.5" >binlog_ca..</text>
</g>
<g >
<title>__write (5 samples, 4.20%)</title><rect x="892.5" y="517" width="49.6" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="895.52" y="527.5" >__write</text>
</g>
<g >
<title>blk_mq_flush_plug_list (2 samples, 1.68%)</title><rect x="753.7" y="565" width="19.8" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="756.70" y="575.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.84%)</title><rect x="228.2" y="789" width="9.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="231.15" y="799.5" ></text>
</g>
<g >
<title>ssl3_read_n (3 samples, 2.52%)</title><rect x="406.6" y="565" width="29.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="409.64" y="575.5" >ss..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.84%)</title><rect x="575.2" y="741" width="9.9" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="578.21" y="751.5" ></text>
</g>
<g >
<title>path_put (1 samples, 0.84%)</title><rect x="733.9" y="533" width="9.9" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="736.87" y="543.5" ></text>
</g>
<g >
<title>__rq_qos_issue (1 samples, 0.84%)</title><rect x="129.0" y="629" width="9.9" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="131.99" y="639.5" ></text>
</g>
<g >
<title>net_write_command(NET*, unsigned char, unsigned char const*, unsigned long, unsigned char const*, unsigned long) (2 samples, 1.68%)</title><rect x="436.4" y="725" width="19.8" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="439.39" y="735.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Detached_thread, void (*)(Clone_persist_gtid*), Clone_persist_gtid*&gt; &gt; &gt;::_M_run() (2 samples, 1.68%)</title><rect x="733.9" y="821" width="19.8" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="736.87" y="831.5" ></text>
</g>
<g >
<title>os_event::wait_time_low(std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long) (1 samples, 0.84%)</title><rect x="833.0" y="805" width="9.9" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="836.03" y="815.5" ></text>
</g>
<g >
<title>binlog_cache_data::write_event(Log_event*) (1 samples, 0.84%)</title><rect x="1130.5" y="645" width="9.9" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="1133.50" y="655.5" ></text>
</g>
<g >
<title>os_file_write_func(IORequest&amp;, char const*, int, void const*, unsigned long, unsigned long) (1 samples, 0.84%)</title><rect x="813.2" y="741" width="9.9" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="816.19" y="751.5" ></text>
</g>
<g >
<title>sock_read_iter (1 samples, 0.84%)</title><rect x="862.8" y="421" width="9.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="865.77" y="431.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 1.68%)</title><rect x="436.4" y="373" width="19.8" height="15.0" fill="rgb(84,196,196)" rx="2" ry="2" />
<text  x="439.39" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.84%)</title><rect x="862.8" y="437" width="9.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="865.77" y="447.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.84%)</title><rect x="367.0" y="373" width="9.9" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="369.97" y="383.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.84%)</title><rect x="674.4" y="725" width="9.9" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="677.37" y="735.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="684.3" y="741" width="9.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="687.29" y="751.5" ></text>
</g>
<g >
<title>ext4_writepages (2 samples, 1.68%)</title><rect x="753.7" y="613" width="19.8" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="756.70" y="623.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (3 samples, 2.52%)</title><rect x="29.8" y="629" width="29.8" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="32.83" y="639.5" >bl..</text>
</g>
<g >
<title>MYSQL_BIN_LOG::commit(THD*, bool) (1 samples, 0.84%)</title><rect x="733.9" y="693" width="9.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="736.87" y="703.5" ></text>
</g>
<g >
<title>os_event::wait_time_low(std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long) (1 samples, 0.84%)</title><rect x="1031.3" y="565" width="10.0" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="1034.34" y="575.5" ></text>
</g>
<g >
<title>ZSTD_compressLiterals (1 samples, 0.84%)</title><rect x="1120.6" y="549" width="9.9" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="1123.59" y="559.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1 samples, 0.84%)</title><rect x="872.7" y="565" width="9.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="875.69" y="575.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.84%)</title><rect x="813.2" y="581" width="9.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="816.19" y="591.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (1 samples, 0.84%)</title><rect x="287.6" y="821" width="10.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="290.65" y="831.5" ></text>
</g>
<g >
<title>trx_release_impl_and_expl_locks(trx_t*, bool) (1 samples, 0.84%)</title><rect x="991.7" y="549" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="994.68" y="559.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (1 samples, 0.84%)</title><rect x="981.8" y="469" width="9.9" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="984.76" y="479.5" ></text>
</g>
<g >
<title>innobase_commit(handlerton*, THD*, bool) (3 samples, 2.52%)</title><rect x="991.7" y="629" width="29.7" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="994.68" y="639.5" >in..</text>
</g>
<g >
<title>trans_commit(THD*, bool) (21 samples, 17.65%)</title><rect x="971.8" y="725" width="208.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="974.85" y="735.5" >trans_commit(THD*, bool)</text>
</g>
<g >
<title>log_flush_low(log_t&amp;) (2 samples, 1.68%)</title><rect x="753.7" y="789" width="19.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="756.70" y="799.5" ></text>
</g>
<g >
<title>sk_wait_data (3 samples, 2.52%)</title><rect x="406.6" y="341" width="29.8" height="15.0" fill="rgb(67,180,180)" rx="2" ry="2" />
<text  x="409.64" y="351.5" >sk..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 1.68%)</title><rect x="436.4" y="53" width="19.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="439.39" y="63.5" ></text>
</g>
<g >
<title>Protocol_classic::send_ok(unsigned int, unsigned int, unsigned long long, unsigned long long, char const*) (5 samples, 4.20%)</title><rect x="892.5" y="741" width="49.6" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="895.52" y="751.5" >Proto..</text>
</g>
<g >
<title>queued_write_lock_slowpath (1 samples, 0.84%)</title><rect x="119.1" y="789" width="9.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="122.08" y="799.5" ></text>
</g>
<g >
<title>blk_mq_requeue_work (10 samples, 8.40%)</title><rect x="129.0" y="773" width="99.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="131.99" y="783.5" >blk_mq_reque..</text>
</g>
<g >
<title>locksys::Global_shared_latch_guard::Global_shared_latch_guard(ut::Location) (1 samples, 0.84%)</title><rect x="991.7" y="517" width="9.9" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="994.68" y="527.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (2 samples, 1.68%)</title><rect x="1061.1" y="453" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1064.09" y="463.5" ></text>
</g>
<g >
<title>bio_read_intern (1 samples, 0.84%)</title><rect x="862.8" y="549" width="9.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text  x="865.77" y="559.5" ></text>
</g>
<g >
<title>iowrite16 (2 samples, 1.68%)</title><rect x="1061.1" y="277" width="19.8" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1064.09" y="287.5" ></text>
</g>
<g >
<title>log_writer_write_buffer(log_t&amp;, unsigned long) (1 samples, 0.84%)</title><rect x="813.2" y="789" width="9.9" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="816.19" y="799.5" ></text>
</g>
<g >
<title>do_writepages (2 samples, 1.68%)</title><rect x="1061.1" y="517" width="19.8" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="1064.09" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.84%)</title><rect x="19.9" y="741" width="9.9" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="22.92" y="751.5" ></text>
</g>
<g >
<title>virtio_queue_rq (10 samples, 8.40%)</title><rect x="129.0" y="661" width="99.2" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="131.99" y="671.5" >virtio_queue..</text>
</g>
<g >
<title>start_thread (34 samples, 28.57%)</title><rect x="852.9" y="837" width="337.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="855.86" y="847.5" >start_thread</text>
</g>
<g >
<title>__napi_poll (1 samples, 0.84%)</title><rect x="347.1" y="229" width="10.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="350.14" y="239.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.84%)</title><rect x="981.8" y="437" width="9.9" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="984.76" y="447.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 2.52%)</title><rect x="406.6" y="421" width="29.8" height="15.0" fill="rgb(54,168,168)" rx="2" ry="2" />
<text  x="409.64" y="431.5" >ne..</text>
</g>
<g >
<title>ssl3_read_bytes (2 samples, 1.68%)</title><rect x="852.9" y="613" width="19.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="855.86" y="623.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.84%)</title><rect x="347.1" y="181" width="10.0" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text  x="350.14" y="191.5" ></text>
</g>
<g >
<title>journal_submit_commit_record.part.0.constprop.0 (3 samples, 2.52%)</title><rect x="59.6" y="773" width="29.7" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="62.58" y="783.5" >jo..</text>
</g>
<g >
<title>vp_notify (8 samples, 6.72%)</title><rect x="148.8" y="629" width="79.4" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="151.82" y="639.5" >vp_notify</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.84%)</title><rect x="347.1" y="133" width="10.0" height="15.0" fill="rgb(90,202,202)" rx="2" ry="2" />
<text  x="350.14" y="143.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 2.52%)</title><rect x="902.4" y="117" width="29.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="905.44" y="127.5" >tc..</text>
</g>
<g >
<title>worker_thread (10 samples, 8.40%)</title><rect x="129.0" y="805" width="99.2" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="131.99" y="815.5" >worker_thread</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.84%)</title><rect x="892.5" y="101" width="9.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="895.52" y="111.5" ></text>
</g>
<g >
<title>fil_redo_io(IORequest const&amp;, page_id_t const&amp;, page_size_t const&amp;, unsigned long, unsigned long, void*) (1 samples, 0.84%)</title><rect x="813.2" y="773" width="9.9" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="816.19" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 1.68%)</title><rect x="436.4" y="133" width="19.8" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="439.39" y="143.5" ></text>
</g>
<g >
<title>mysql_encryption_file_write(IO_CACHE*, unsigned char const*, unsigned long, int) (1 samples, 0.84%)</title><rect x="981.8" y="613" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="984.76" y="623.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4 samples, 3.36%)</title><rect x="892.5" y="149" width="39.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="895.52" y="159.5" >ip_..</text>
</g>
<g >
<title>ssl_read_internal (2 samples, 1.68%)</title><rect x="852.9" y="661" width="19.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="855.86" y="671.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (1 samples, 0.84%)</title><rect x="248.0" y="837" width="9.9" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="250.98" y="847.5" ></text>
</g>
<g >
<title>ret_from_fork (12 samples, 10.08%)</title><rect x="10.0" y="837" width="119.0" height="15.0" fill="rgb(53,168,168)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >ret_from_fork</text>
</g>
<g >
<title>Gtid_table_access_context::init(THD**, TABLE**, bool) (1 samples, 0.84%)</title><rect x="743.8" y="741" width="9.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="746.78" y="751.5" ></text>
</g>
<g >
<title>Write_rows_log_event::~Write_rows_log_event() (1 samples, 0.84%)</title><rect x="961.9" y="661" width="9.9" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="964.93" y="671.5" ></text>
</g>
<g >
<title>MySQL_query (6 samples, 5.04%)</title><rect x="327.3" y="805" width="59.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="330.31" y="815.5" >MySQL_..</text>
</g>
<g >
<title>vfs_write (5 samples, 4.20%)</title><rect x="892.5" y="453" width="49.6" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="895.52" y="463.5" >vfs_w..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.84%)</title><rect x="694.2" y="837" width="9.9" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="697.20" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.84%)</title><rect x="406.6" y="325" width="10.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="409.64" y="335.5" ></text>
</g>
<g >
<title>__rq_qos_track (1 samples, 0.84%)</title><rect x="69.5" y="709" width="9.9" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="72.50" y="719.5" ></text>
</g>
<g >
<title>sock_sendmsg (4 samples, 3.36%)</title><rect x="347.1" y="421" width="39.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="350.14" y="431.5" >soc..</text>
</g>
<g >
<title>log_write_up_to(log_t&amp;, unsigned long, bool) (1 samples, 0.84%)</title><rect x="1021.4" y="565" width="9.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="1024.43" y="575.5" ></text>
</g>
<g >
<title>ssl3_read_internal (2 samples, 1.68%)</title><rect x="852.9" y="629" width="19.8" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="855.86" y="639.5" ></text>
</g>
<g >
<title>HUF_compress4X_repeat (1 samples, 0.84%)</title><rect x="1120.6" y="533" width="9.9" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="1123.59" y="543.5" ></text>
</g>
<g >
<title>Rows_log_event::~Rows_log_event() (1 samples, 0.84%)</title><rect x="961.9" y="645" width="9.9" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="964.93" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.52%)</title><rect x="1061.1" y="613" width="29.7" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1064.09" y="623.5" >en..</text>
</g>
<g >
<title>do_futex (7 samples, 5.88%)</title><rect x="614.9" y="773" width="69.4" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="617.87" y="783.5" >do_futex</text>
</g>
<g >
<title>read (1 samples, 0.84%)</title><rect x="862.8" y="517" width="9.9" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="865.77" y="527.5" ></text>
</g>
<g >
<title>log_writer(log_t*) (3 samples, 2.52%)</title><rect x="803.3" y="805" width="29.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="806.28" y="815.5" >lo..</text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 1.68%)</title><rect x="436.4" y="277" width="19.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="439.39" y="287.5" ></text>
</g>
<g >
<title>log_write_notifier(log_t*) (2 samples, 1.68%)</title><rect x="783.4" y="805" width="19.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="786.45" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.84%)</title><rect x="347.1" y="197" width="10.0" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="350.14" y="207.5" ></text>
</g>
<g >
<title>submit_bh_wbc (2 samples, 1.68%)</title><rect x="69.5" y="757" width="19.8" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="72.50" y="767.5" ></text>
</g>
<g >
<title>binary_log::transaction::compression::Zstd_comp::close() (2 samples, 1.68%)</title><rect x="1110.7" y="645" width="19.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="1113.67" y="655.5" ></text>
</g>
<g >
<title>submit_bh_wbc (1 samples, 0.84%)</title><rect x="109.2" y="773" width="9.9" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="112.16" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.84%)</title><rect x="872.7" y="645" width="9.9" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="875.69" y="655.5" ></text>
</g>
<g >
<title>net_read_raw_loop(NET*, unsigned long) (3 samples, 2.52%)</title><rect x="852.9" y="709" width="29.7" height="15.0" fill="rgb(75,187,187)" rx="2" ry="2" />
<text  x="855.86" y="719.5" >ne..</text>
</g>
<g >
<title>my_net_read(NET*) (3 samples, 2.52%)</title><rect x="406.6" y="725" width="29.8" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="409.64" y="735.5" >my..</text>
</g>
</g>
</svg>
